# Makefile.in generated by automake 1.15 from Makefile.am.
# tests/unittests/f/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/med
pkgincludedir = $(includedir)/med
pkglibdir = $(libdir)/med
pkglibexecdir = $(libexecdir)/med
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu

#TESTS_ENVIRONMENT += OUTPUT="yes" 
#TESTS_ENVIRONMENT += OUTPUT="yes" CHECKER="libtool\ --mode=execute\ valgrind"
am__append_1 = $(FTLDFLAGS)
am__append_2 = $(FTLIBS)
check_PROGRAMS = Unittest_MEDlibrary_1$(EXEEXT) \
	Unittest_MEDfile_1$(EXEEXT) \
	Unittest_MEDsupportMesh_1$(EXEEXT) \
	Unittest_MEDsupportMesh_2$(EXEEXT) \
	Unittest_MEDsupportMesh_3$(EXEEXT) \
	Unittest_MEDstructElement_1$(EXEEXT) \
	Unittest_MEDstructElement_2$(EXEEXT) \
	Unittest_MEDstructElement_3$(EXEEXT) \
	Unittest_MEDstructElement_4$(EXEEXT) \
	Unittest_MEDstructElement_5$(EXEEXT) \
	Unittest_MEDstructElement_6$(EXEEXT) \
	Unittest_MEDstructElement_7$(EXEEXT) \
	Unittest_MEDstructElement_8$(EXEEXT) \
	Unittest_MEDstructElement_9$(EXEEXT) \
	Unittest_MEDstructElement_10$(EXEEXT) \
	Unittest_MEDstructElement_11$(EXEEXT) \
	Unittest_MEDprofile_1$(EXEEXT) \
	Unittest_MEDprofile_2$(EXEEXT) \
	Unittest_MEDlink_1$(EXEEXT) \
	Unittest_MEDlink_2$(EXEEXT) \
	Unittest_MEDlink_3$(EXEEXT) \
	Unittest_MEDlocalization_1$(EXEEXT) \
	Unittest_MEDlocalization_2$(EXEEXT) \
	Unittest_MEDlocalization_3$(EXEEXT) \
	Unittest_MEDinterp_1$(EXEEXT) \
	Unittest_MEDinterp_2$(EXEEXT) \
	Unittest_MEDinterp_3$(EXEEXT) \
	Unittest_MEDparameter_1$(EXEEXT) \
	Unittest_MEDparameter_2$(EXEEXT) \
	Unittest_MEDparameter_3$(EXEEXT) \
	Unittest_MEDfilter_1$(EXEEXT) \
	Unittest_MEDfilter_2$(EXEEXT)
subdir = tests/unittests/f
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ac_check_sizeof_fortran.m4 \
	$(top_srcdir)/config/ax_absolute_header.m4 \
	$(top_srcdir)/config/ax_compare_version.m4 \
	$(top_srcdir)/config/ax_pkg_swig.m4 \
	$(top_srcdir)/config/ax_prog_cc_mpi.m4 \
	$(top_srcdir)/config/ax_prog_cxx_mpi.m4 \
	$(top_srcdir)/config/ax_prog_f77_mpi.m4 \
	$(top_srcdir)/config/ax_prog_fc_mpi.m4 \
	$(top_srcdir)/config/ax_python_devel.m4 \
	$(top_srcdir)/config/ax_swig_python.m4 \
	$(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/med_check_f77.m4 \
	$(top_srcdir)/config/med_check_f90.m4 \
	$(top_srcdir)/config/med_check_hdf5.m4 \
	$(top_srcdir)/config/med_check_mesgerr.m4 \
	$(top_srcdir)/config/med_check_python.m4 \
	$(top_srcdir)/config/med_check_python_devel.m4 \
	$(top_srcdir)/config/med_check_swig.m4 \
	$(top_srcdir)/config/med_check_typeof_hidt.m4 \
	$(top_srcdir)/config/med_check_typeof_int64.m4 \
	$(top_srcdir)/config/med_check_typeof_medint.m4 \
	$(top_srcdir)/config/med_disable_api23.m4 \
	$(top_srcdir)/config/med_enable_check23.m4 \
	$(top_srcdir)/config/med_enable_installtest.m4 \
	$(top_srcdir)/config/med_enable_pmed.m4 \
	$(top_srcdir)/config/med_summary.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/med_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__Unittest_MEDfile_1_SOURCES_DIST = Unittest_MEDfile_1.f
am_Unittest_MEDfile_1_OBJECTS =  \
	Unittest_MEDfile_1.$(OBJEXT)
Unittest_MEDfile_1_OBJECTS = $(am_Unittest_MEDfile_1_OBJECTS)
Unittest_MEDfile_1_LDADD = $(LDADD)
Unittest_MEDfile_1_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am__Unittest_MEDfilter_1_SOURCES_DIST = Unittest_MEDfilter_1.f
am_Unittest_MEDfilter_1_OBJECTS =  \
	Unittest_MEDfilter_1.$(OBJEXT)
Unittest_MEDfilter_1_OBJECTS = $(am_Unittest_MEDfilter_1_OBJECTS)
Unittest_MEDfilter_1_LDADD = $(LDADD)
Unittest_MEDfilter_1_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDfilter_2_SOURCES_DIST = Unittest_MEDfilter_2.f
am_Unittest_MEDfilter_2_OBJECTS =  \
	Unittest_MEDfilter_2.$(OBJEXT)
Unittest_MEDfilter_2_OBJECTS = $(am_Unittest_MEDfilter_2_OBJECTS)
Unittest_MEDfilter_2_LDADD = $(LDADD)
Unittest_MEDfilter_2_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDinterp_1_SOURCES_DIST = Unittest_MEDinterp_1.f
am_Unittest_MEDinterp_1_OBJECTS =  \
	Unittest_MEDinterp_1.$(OBJEXT)
Unittest_MEDinterp_1_OBJECTS = $(am_Unittest_MEDinterp_1_OBJECTS)
Unittest_MEDinterp_1_LDADD = $(LDADD)
Unittest_MEDinterp_1_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDinterp_2_SOURCES_DIST = Unittest_MEDinterp_2.f
am_Unittest_MEDinterp_2_OBJECTS =  \
	Unittest_MEDinterp_2.$(OBJEXT)
Unittest_MEDinterp_2_OBJECTS = $(am_Unittest_MEDinterp_2_OBJECTS)
Unittest_MEDinterp_2_LDADD = $(LDADD)
Unittest_MEDinterp_2_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDinterp_3_SOURCES_DIST = Unittest_MEDinterp_3.f
am_Unittest_MEDinterp_3_OBJECTS =  \
	Unittest_MEDinterp_3.$(OBJEXT)
Unittest_MEDinterp_3_OBJECTS = $(am_Unittest_MEDinterp_3_OBJECTS)
Unittest_MEDinterp_3_LDADD = $(LDADD)
Unittest_MEDinterp_3_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDlibrary_1_SOURCES_DIST = Unittest_MEDlibrary_1.f
am_Unittest_MEDlibrary_1_OBJECTS =  \
	Unittest_MEDlibrary_1.$(OBJEXT)
Unittest_MEDlibrary_1_OBJECTS = $(am_Unittest_MEDlibrary_1_OBJECTS)
Unittest_MEDlibrary_1_LDADD = $(LDADD)
Unittest_MEDlibrary_1_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDlink_1_SOURCES_DIST = Unittest_MEDlink_1.f
am_Unittest_MEDlink_1_OBJECTS =  \
	Unittest_MEDlink_1.$(OBJEXT)
Unittest_MEDlink_1_OBJECTS = $(am_Unittest_MEDlink_1_OBJECTS)
Unittest_MEDlink_1_LDADD = $(LDADD)
Unittest_MEDlink_1_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDlink_2_SOURCES_DIST = Unittest_MEDlink_2.f
am_Unittest_MEDlink_2_OBJECTS =  \
	Unittest_MEDlink_2.$(OBJEXT)
Unittest_MEDlink_2_OBJECTS = $(am_Unittest_MEDlink_2_OBJECTS)
Unittest_MEDlink_2_LDADD = $(LDADD)
Unittest_MEDlink_2_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDlink_3_SOURCES_DIST = Unittest_MEDlink_3.f
am_Unittest_MEDlink_3_OBJECTS =  \
	Unittest_MEDlink_3.$(OBJEXT)
Unittest_MEDlink_3_OBJECTS = $(am_Unittest_MEDlink_3_OBJECTS)
Unittest_MEDlink_3_LDADD = $(LDADD)
Unittest_MEDlink_3_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDlocalization_1_SOURCES_DIST =  \
	Unittest_MEDlocalization_1.f
am_Unittest_MEDlocalization_1_OBJECTS =  \
	Unittest_MEDlocalization_1.$(OBJEXT)
Unittest_MEDlocalization_1_OBJECTS =  \
	$(am_Unittest_MEDlocalization_1_OBJECTS)
Unittest_MEDlocalization_1_LDADD = $(LDADD)
Unittest_MEDlocalization_1_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDlocalization_2_SOURCES_DIST =  \
	Unittest_MEDlocalization_2.f
am_Unittest_MEDlocalization_2_OBJECTS =  \
	Unittest_MEDlocalization_2.$(OBJEXT)
Unittest_MEDlocalization_2_OBJECTS =  \
	$(am_Unittest_MEDlocalization_2_OBJECTS)
Unittest_MEDlocalization_2_LDADD = $(LDADD)
Unittest_MEDlocalization_2_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDlocalization_3_SOURCES_DIST =  \
	Unittest_MEDlocalization_3.f
am_Unittest_MEDlocalization_3_OBJECTS =  \
	Unittest_MEDlocalization_3.$(OBJEXT)
Unittest_MEDlocalization_3_OBJECTS =  \
	$(am_Unittest_MEDlocalization_3_OBJECTS)
Unittest_MEDlocalization_3_LDADD = $(LDADD)
Unittest_MEDlocalization_3_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDparameter_1_SOURCES_DIST = Unittest_MEDparameter_1.f
am_Unittest_MEDparameter_1_OBJECTS =  \
	Unittest_MEDparameter_1.$(OBJEXT)
Unittest_MEDparameter_1_OBJECTS =  \
	$(am_Unittest_MEDparameter_1_OBJECTS)
Unittest_MEDparameter_1_LDADD = $(LDADD)
Unittest_MEDparameter_1_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDparameter_2_SOURCES_DIST = Unittest_MEDparameter_2.f
am_Unittest_MEDparameter_2_OBJECTS =  \
	Unittest_MEDparameter_2.$(OBJEXT)
Unittest_MEDparameter_2_OBJECTS =  \
	$(am_Unittest_MEDparameter_2_OBJECTS)
Unittest_MEDparameter_2_LDADD = $(LDADD)
Unittest_MEDparameter_2_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDparameter_3_SOURCES_DIST = Unittest_MEDparameter_3.f
am_Unittest_MEDparameter_3_OBJECTS =  \
	Unittest_MEDparameter_3.$(OBJEXT)
Unittest_MEDparameter_3_OBJECTS =  \
	$(am_Unittest_MEDparameter_3_OBJECTS)
Unittest_MEDparameter_3_LDADD = $(LDADD)
Unittest_MEDparameter_3_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDprofile_1_SOURCES_DIST = Unittest_MEDprofile_1.f
am_Unittest_MEDprofile_1_OBJECTS =  \
	Unittest_MEDprofile_1.$(OBJEXT)
Unittest_MEDprofile_1_OBJECTS = $(am_Unittest_MEDprofile_1_OBJECTS)
Unittest_MEDprofile_1_LDADD = $(LDADD)
Unittest_MEDprofile_1_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDprofile_2_SOURCES_DIST = Unittest_MEDprofile_2.f
am_Unittest_MEDprofile_2_OBJECTS =  \
	Unittest_MEDprofile_2.$(OBJEXT)
Unittest_MEDprofile_2_OBJECTS = $(am_Unittest_MEDprofile_2_OBJECTS)
Unittest_MEDprofile_2_LDADD = $(LDADD)
Unittest_MEDprofile_2_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDstructElement_1_SOURCES_DIST =  \
	Unittest_MEDstructElement_1.f
am_Unittest_MEDstructElement_1_OBJECTS =  \
	Unittest_MEDstructElement_1.$(OBJEXT)
Unittest_MEDstructElement_1_OBJECTS =  \
	$(am_Unittest_MEDstructElement_1_OBJECTS)
Unittest_MEDstructElement_1_LDADD = $(LDADD)
Unittest_MEDstructElement_1_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDstructElement_10_SOURCES_DIST =  \
	Unittest_MEDstructElement_10.f
am_Unittest_MEDstructElement_10_OBJECTS =  \
	Unittest_MEDstructElement_10.$(OBJEXT)
Unittest_MEDstructElement_10_OBJECTS =  \
	$(am_Unittest_MEDstructElement_10_OBJECTS)
Unittest_MEDstructElement_10_LDADD = $(LDADD)
Unittest_MEDstructElement_10_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDstructElement_11_SOURCES_DIST =  \
	Unittest_MEDstructElement_11.f
am_Unittest_MEDstructElement_11_OBJECTS =  \
	Unittest_MEDstructElement_11.$(OBJEXT)
Unittest_MEDstructElement_11_OBJECTS =  \
	$(am_Unittest_MEDstructElement_11_OBJECTS)
Unittest_MEDstructElement_11_LDADD = $(LDADD)
Unittest_MEDstructElement_11_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDstructElement_2_SOURCES_DIST =  \
	Unittest_MEDstructElement_2.f
am_Unittest_MEDstructElement_2_OBJECTS =  \
	Unittest_MEDstructElement_2.$(OBJEXT)
Unittest_MEDstructElement_2_OBJECTS =  \
	$(am_Unittest_MEDstructElement_2_OBJECTS)
Unittest_MEDstructElement_2_LDADD = $(LDADD)
Unittest_MEDstructElement_2_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDstructElement_3_SOURCES_DIST =  \
	Unittest_MEDstructElement_3.f
am_Unittest_MEDstructElement_3_OBJECTS =  \
	Unittest_MEDstructElement_3.$(OBJEXT)
Unittest_MEDstructElement_3_OBJECTS =  \
	$(am_Unittest_MEDstructElement_3_OBJECTS)
Unittest_MEDstructElement_3_LDADD = $(LDADD)
Unittest_MEDstructElement_3_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDstructElement_4_SOURCES_DIST =  \
	Unittest_MEDstructElement_4.f
am_Unittest_MEDstructElement_4_OBJECTS =  \
	Unittest_MEDstructElement_4.$(OBJEXT)
Unittest_MEDstructElement_4_OBJECTS =  \
	$(am_Unittest_MEDstructElement_4_OBJECTS)
Unittest_MEDstructElement_4_LDADD = $(LDADD)
Unittest_MEDstructElement_4_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDstructElement_5_SOURCES_DIST =  \
	Unittest_MEDstructElement_5.f
am_Unittest_MEDstructElement_5_OBJECTS =  \
	Unittest_MEDstructElement_5.$(OBJEXT)
Unittest_MEDstructElement_5_OBJECTS =  \
	$(am_Unittest_MEDstructElement_5_OBJECTS)
Unittest_MEDstructElement_5_LDADD = $(LDADD)
Unittest_MEDstructElement_5_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDstructElement_6_SOURCES_DIST =  \
	Unittest_MEDstructElement_6.f
am_Unittest_MEDstructElement_6_OBJECTS =  \
	Unittest_MEDstructElement_6.$(OBJEXT)
Unittest_MEDstructElement_6_OBJECTS =  \
	$(am_Unittest_MEDstructElement_6_OBJECTS)
Unittest_MEDstructElement_6_LDADD = $(LDADD)
Unittest_MEDstructElement_6_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDstructElement_7_SOURCES_DIST =  \
	Unittest_MEDstructElement_7.f
am_Unittest_MEDstructElement_7_OBJECTS =  \
	Unittest_MEDstructElement_7.$(OBJEXT)
Unittest_MEDstructElement_7_OBJECTS =  \
	$(am_Unittest_MEDstructElement_7_OBJECTS)
Unittest_MEDstructElement_7_LDADD = $(LDADD)
Unittest_MEDstructElement_7_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDstructElement_8_SOURCES_DIST =  \
	Unittest_MEDstructElement_8.f
am_Unittest_MEDstructElement_8_OBJECTS =  \
	Unittest_MEDstructElement_8.$(OBJEXT)
Unittest_MEDstructElement_8_OBJECTS =  \
	$(am_Unittest_MEDstructElement_8_OBJECTS)
Unittest_MEDstructElement_8_LDADD = $(LDADD)
Unittest_MEDstructElement_8_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDstructElement_9_SOURCES_DIST =  \
	Unittest_MEDstructElement_9.f
am_Unittest_MEDstructElement_9_OBJECTS =  \
	Unittest_MEDstructElement_9.$(OBJEXT)
Unittest_MEDstructElement_9_OBJECTS =  \
	$(am_Unittest_MEDstructElement_9_OBJECTS)
Unittest_MEDstructElement_9_LDADD = $(LDADD)
Unittest_MEDstructElement_9_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDsupportMesh_1_SOURCES_DIST =  \
	Unittest_MEDsupportMesh_1.f
am_Unittest_MEDsupportMesh_1_OBJECTS =  \
	Unittest_MEDsupportMesh_1.$(OBJEXT)
Unittest_MEDsupportMesh_1_OBJECTS =  \
	$(am_Unittest_MEDsupportMesh_1_OBJECTS)
Unittest_MEDsupportMesh_1_LDADD = $(LDADD)
Unittest_MEDsupportMesh_1_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDsupportMesh_2_SOURCES_DIST =  \
	Unittest_MEDsupportMesh_2.f
am_Unittest_MEDsupportMesh_2_OBJECTS =  \
	Unittest_MEDsupportMesh_2.$(OBJEXT)
Unittest_MEDsupportMesh_2_OBJECTS =  \
	$(am_Unittest_MEDsupportMesh_2_OBJECTS)
Unittest_MEDsupportMesh_2_LDADD = $(LDADD)
Unittest_MEDsupportMesh_2_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
am__Unittest_MEDsupportMesh_3_SOURCES_DIST =  \
	Unittest_MEDsupportMesh_3.f
am_Unittest_MEDsupportMesh_3_OBJECTS =  \
	Unittest_MEDsupportMesh_3.$(OBJEXT)
Unittest_MEDsupportMesh_3_OBJECTS =  \
	$(am_Unittest_MEDsupportMesh_3_OBJECTS)
Unittest_MEDsupportMesh_3_LDADD = $(LDADD)
Unittest_MEDsupportMesh_3_DEPENDENCIES =  \
	$(top_builddir)/src/libmed.la
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
AM_V_F77 = $(am__v_F77_$(V))
am__v_F77_ = $(am__v_F77_$(AM_DEFAULT_VERBOSITY))
am__v_F77_0 = @echo "  F77     " $@;
am__v_F77_1 = 
F77LD = $(F77)
F77LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_F77LD = $(am__v_F77LD_$(V))
am__v_F77LD_ = $(am__v_F77LD_$(AM_DEFAULT_VERBOSITY))
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
SOURCES = $(Unittest_MEDfile_1_SOURCES) \
	$(Unittest_MEDfilter_1_SOURCES) \
	$(Unittest_MEDfilter_2_SOURCES) \
	$(Unittest_MEDinterp_1_SOURCES) \
	$(Unittest_MEDinterp_2_SOURCES) \
	$(Unittest_MEDinterp_3_SOURCES) \
	$(Unittest_MEDlibrary_1_SOURCES) $(Unittest_MEDlink_1_SOURCES) \
	$(Unittest_MEDlink_2_SOURCES) $(Unittest_MEDlink_3_SOURCES) \
	$(Unittest_MEDlocalization_1_SOURCES) \
	$(Unittest_MEDlocalization_2_SOURCES) \
	$(Unittest_MEDlocalization_3_SOURCES) \
	$(Unittest_MEDparameter_1_SOURCES) \
	$(Unittest_MEDparameter_2_SOURCES) \
	$(Unittest_MEDparameter_3_SOURCES) \
	$(Unittest_MEDprofile_1_SOURCES) \
	$(Unittest_MEDprofile_2_SOURCES) \
	$(Unittest_MEDstructElement_1_SOURCES) \
	$(Unittest_MEDstructElement_10_SOURCES) \
	$(Unittest_MEDstructElement_11_SOURCES) \
	$(Unittest_MEDstructElement_2_SOURCES) \
	$(Unittest_MEDstructElement_3_SOURCES) \
	$(Unittest_MEDstructElement_4_SOURCES) \
	$(Unittest_MEDstructElement_5_SOURCES) \
	$(Unittest_MEDstructElement_6_SOURCES) \
	$(Unittest_MEDstructElement_7_SOURCES) \
	$(Unittest_MEDstructElement_8_SOURCES) \
	$(Unittest_MEDstructElement_9_SOURCES) \
	$(Unittest_MEDsupportMesh_1_SOURCES) \
	$(Unittest_MEDsupportMesh_2_SOURCES) \
	$(Unittest_MEDsupportMesh_3_SOURCES)
DIST_SOURCES = $(am__Unittest_MEDfile_1_SOURCES_DIST) \
	$(am__Unittest_MEDfilter_1_SOURCES_DIST) \
	$(am__Unittest_MEDfilter_2_SOURCES_DIST) \
	$(am__Unittest_MEDinterp_1_SOURCES_DIST) \
	$(am__Unittest_MEDinterp_2_SOURCES_DIST) \
	$(am__Unittest_MEDinterp_3_SOURCES_DIST) \
	$(am__Unittest_MEDlibrary_1_SOURCES_DIST) \
	$(am__Unittest_MEDlink_1_SOURCES_DIST) \
	$(am__Unittest_MEDlink_2_SOURCES_DIST) \
	$(am__Unittest_MEDlink_3_SOURCES_DIST) \
	$(am__Unittest_MEDlocalization_1_SOURCES_DIST) \
	$(am__Unittest_MEDlocalization_2_SOURCES_DIST) \
	$(am__Unittest_MEDlocalization_3_SOURCES_DIST) \
	$(am__Unittest_MEDparameter_1_SOURCES_DIST) \
	$(am__Unittest_MEDparameter_2_SOURCES_DIST) \
	$(am__Unittest_MEDparameter_3_SOURCES_DIST) \
	$(am__Unittest_MEDprofile_1_SOURCES_DIST) \
	$(am__Unittest_MEDprofile_2_SOURCES_DIST) \
	$(am__Unittest_MEDstructElement_1_SOURCES_DIST) \
	$(am__Unittest_MEDstructElement_10_SOURCES_DIST) \
	$(am__Unittest_MEDstructElement_11_SOURCES_DIST) \
	$(am__Unittest_MEDstructElement_2_SOURCES_DIST) \
	$(am__Unittest_MEDstructElement_3_SOURCES_DIST) \
	$(am__Unittest_MEDstructElement_4_SOURCES_DIST) \
	$(am__Unittest_MEDstructElement_5_SOURCES_DIST) \
	$(am__Unittest_MEDstructElement_6_SOURCES_DIST) \
	$(am__Unittest_MEDstructElement_7_SOURCES_DIST) \
	$(am__Unittest_MEDstructElement_8_SOURCES_DIST) \
	$(am__Unittest_MEDstructElement_9_SOURCES_DIST) \
	$(am__Unittest_MEDsupportMesh_1_SOURCES_DIST) \
	$(am__Unittest_MEDsupportMesh_2_SOURCES_DIST) \
	$(am__Unittest_MEDsupportMesh_3_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
DIST_SUBDIRS = dumps.ref .
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/config/automake.common
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/tomsail/apps/telemac-mascaret/optionals/med-4.0.0/config/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/tomsail/apps/telemac-mascaret/optionals/med-4.0.0/config/missing autoconf
AUTOHEADER = ${SHELL} /home/tomsail/apps/telemac-mascaret/optionals/med-4.0.0/config/missing autoheader
AUTOMAKE = ${SHELL} /home/tomsail/apps/telemac-mascaret/optionals/med-4.0.0/config/missing automake-1.15
AWK = mawk
BUILD_F77TESTS_CONDITIONAL_FALSE = #
BUILD_F77TESTS_CONDITIONAL_TRUE = 
BUILD_F90TESTS_CONDITIONAL_FALSE = 
BUILD_F90TESTS_CONDITIONAL_TRUE = #
BUILD_PYTHONTESTS_CONDITIONAL_FALSE = 
BUILD_PYTHONTESTS_CONDITIONAL_TRUE = #
BUILD_WITH_PMED = yes
CC = mpicc
CCDEPMODE = depmode=gcc3
CC_VERSION = /usr/bin/mpicc
CFLAGS = -g -O2
CONFIG_DATE = Mon Jun 19 19:05:58 CEST 2023
CONFIG_USER = root@tomsail-XPS-15-7590
CP = /usr/bin/cp
CPP = mpicc -E
CPPFLAGS = 
CXX = mpic++
CXXCPP = mpic++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CXXOK = yes
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DIFF = yes
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
F77 = mpif77
FC = 
FCFLAGS = 
FCFLAGS_F = 
FCFLAGS_F90 = 
FCLIBS = 
FC_DEFINE = 
FFLAGS = -g -O2
FGREP = /usr/bin/grep -F
FLIBS =  -L/usr/lib/x86_64-linux-gnu/openmpi/lib/fortran/gfortran -L/usr/lib/gcc/x86_64-linux-gnu/11 -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/11/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/11/../../.. -lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi -lopen-rte -lopen-pal -lhwloc -levent_core -levent_pthreads -lgfortran -lm -lz -lquadmath
FTLDFLAGS = 
FTLIBS = 
GREP = /usr/bin/grep
H5DUMP = /home/tomsail/apps/telemac-mascaret/optionals/hdf5-1.10.3/bin/h5dump
HDF5_CPPFLAGS = -DH5_USE_16_API -I/home/tomsail/apps/telemac-mascaret/optionals/hdf5-1.10.3/include
HDF5_LDFLAGS = -L/home/tomsail/apps/telemac-mascaret/optionals/hdf5-1.10.3/lib
HDF5_LIBS = -lhdf5
HDF5_TYPEDEF_HERR_T = typedef int herr_t;
HDF5_TYPEDEF_HID_T = typedef int64_t hid_t;
HDF5_TYPEDEF_HSIZE_T = typedef unsigned long long 	hsize_t;
HDF5_USED_VER = "HDF5 library version: 1.10.3"
HDF_VERSION_MAJOR_REF = 1
HDF_VERSION_MINOR_REF = 10
HDF_VERSION_REF = 5-1.10.2
HDF_VERSION_RELEASE_REF = 2
HIDT_I8_OR_I4 = integer*8
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS =  $(am__append_2)
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LONG_OR_INT = int
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/tomsail/apps/telemac-mascaret/optionals/med-4.0.0/config/missing makeinfo
MANIFEST_TOOL = :
MEDIMPORT_CMAKE_SO_MAJ = 0
MEDIMPORT_CMAKE_SO_MIN = 3
MEDIMPORT_CMAKE_SO_REL = 0
MEDIMPORT_CMAKE_SO_VERSION = 0.3.0
MEDIMPORT_LIBTOOL_MAJ = 3
MEDIMPORT_LIBTOOL_MIN = 0
MEDIMPORT_LIBTOOL_REL = 3
MED_3_LATEST_MINOR = 3
MED_API_23 = -DMED_API_23=1
MED_CHECK_23FORMAT = yes
MED_CMAKE_SO_MAJ = 11
MED_CMAKE_SO_MIN = 0
MED_CMAKE_SO_REL = 0
MED_CMAKE_SO_VERSION = 11.0.0
MED_DEFINE_MED_HAVE_MPI = #define MED_HAVE_MPI
MED_INT32 = int32_t
MED_INT64 = int64_t
MED_LIBTOOL_MAJ = 11
MED_LIBTOOL_MIN = 0
MED_LIBTOOL_REL = 0
MED_NUM_MAJEUR = 4
MED_NUM_MINEUR = 0
MED_NUM_RELEASE = 0
MED_PYTHON2_VERSION_REF = 2.7
MED_PYTHON3_VERSION_REF = 3.0
MED_PYTHON_VERSION_REF = 3.0
MED_SWIG_MIN_VERSION_REF = 2.0.8
MED_SWIG_VERSION_REF = 3.0.8
MESGERR = yes
MKDIR_P = /usr/bin/mkdir -p
MPICC = 
MPICXX = 
MPIF77 = 
MPIFC = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = med
PACKAGE_BUGREPORT = eric.fayolle@edf.fr
PACKAGE_NAME = MED Fichier
PACKAGE_STRING = MED Fichier 4.0.0
PACKAGE_TARNAME = med
PACKAGE_URL = 
PACKAGE_VERSION = 4.0.0
PATH_SEPARATOR = :
PYTHON = Python not available
PYTHON_CPPFLAGS = 
PYTHON_EXEC_PREFIX = 
PYTHON_EXTRA_LDFLAGS = 
PYTHON_EXTRA_LIBS = 
PYTHON_LDFLAGS = 
PYTHON_PLATFORM = 
PYTHON_PREFIX = 
PYTHON_SITE_PKG = 
PYTHON_VERSION = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STATIC_SHARED = static, shared
STRIP = strip
SWIG = SWIG not available.
SWIGFLAGS = 
SWIG_LIB = 
SWIG_PYTHON_CPPFLAGS = 
SWIG_PYTHON_OPT = 
UNAME_INFO = Linux tomsail-XPS-15-7590 5.19.0-45-generic #46~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Wed Jun 7 15:06:04 UTC 20 x86_64 x86_64 x86_64 GNU/Linux
VERSION = 4.0.0
WISH = /usr/bin/wish
abs_builddir = /home/tomsail/apps/telemac-mascaret/optionals/med-4.0.0/tests/unittests/f
abs_srcdir = /home/tomsail/apps/telemac-mascaret/optionals/med-4.0.0/tests/unittests/f
abs_top_builddir = /home/tomsail/apps/telemac-mascaret/optionals/med-4.0.0
abs_top_srcdir = /home/tomsail/apps/telemac-mascaret/optionals/med-4.0.0
ac_aux_dir = config
ac_ct_AR = ar
ac_ct_CC = mpicc
ac_ct_CXX = mpic++
ac_ct_DUMPBIN = 
ac_ct_F77 = mpif77
ac_ct_FC = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
enable_shared = yes
enable_static = yes
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/tomsail/apps/telemac-mascaret/optionals/med-4.0.0/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = 
pkgpythondir = 
prefix = /home/tomsail/apps/telemac-mascaret/optionals/med-4.0.0
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = 
pythondir = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
MAINTAINERCLEANFILES = Makefile.in 
AM_CPPFLAGS = -I$(top_srcdir)/include -I$(top_builddir)/include \
	-DH5_USE_16_API -I/home/tomsail/apps/telemac-mascaret/optionals/hdf5-1.10.3/include $(am__empty)
AM_FFLAGS = -I$(top_srcdir)/include  -I$(top_builddir)/include
AM_FCFLAGS = -I$(top_srcdir)/include  -I$(top_builddir)/include
AM_LDFLAGS = -L/home/tomsail/apps/telemac-mascaret/optionals/hdf5-1.10.3/lib $(am__append_1)
DEFAULT_INCLUDES = -I. -I$(srcdir)
TESTS_ENVIRONMENT = eval H5DUMP=/home/tomsail/apps/telemac-mascaret/optionals/hdf5-1.10.3/bin/h5dump SRCDIR=$(srcdir) SRCDIR="$(abs_srcdir)" BUILDDIR="$(abs_builddir)" \
		EXECDIR="$(abs_builddir)" CP=${CP} CPYMED="no"

AM_LIBTOOLFLAGS = --tag=F77
testfdir = $(bindir)/testf
TESTS_LEC = Unittest_MEDlibrary_1.sh  Unittest_MEDsupportMesh_2.sh Unittest_MEDsupportMesh_3.sh \
Unittest_MEDstructElement_2.sh Unittest_MEDstructElement_3.sh \
Unittest_MEDstructElement_5.sh Unittest_MEDstructElement_6.sh \
Unittest_MEDstructElement_8.sh Unittest_MEDstructElement_10.sh \
Unittest_MEDstructElement_11.sh Unittest_MEDlink_2.sh Unittest_MEDlink_3.sh \
Unittest_MEDlocalization_2.sh Unittest_MEDlocalization_3.sh \
Unittest_MEDinterp_2.sh Unittest_MEDinterp_3.sh \
Unittest_MEDparameter_2.sh Unittest_MEDparameter_3.sh

TESTS_ECR = Unittest_MEDfile_1.sh Unittest_MEDsupportMesh_1.sh Unittest_MEDstructElement_1.sh  \
Unittest_MEDstructElement_4.sh Unittest_MEDstructElement_7.sh  Unittest_MEDstructElement_9.sh \
Unittest_MEDprofile_1.sh Unittest_MEDlink_1.sh Unittest_MEDlocalization_1.sh \
Unittest_MEDinterp_1.sh Unittest_MEDparameter_1.sh Unittest_MEDfilter_1.sh \
Unittest_MEDfilter_2.sh

TESTS = $(TESTS_ECR) $(TESTS_LEC)
EXTRA_DIST = Unittest_MEDlibrary_1.sh Unittest_MEDfile_1.sh Unittest_MEDsupportMesh_1.sh Unittest_MEDsupportMesh_2.sh \
Unittest_MEDsupportMesh_3.sh Unittest_MEDstructElement_1.sh  Unittest_MEDstructElement_2.sh Unittest_MEDstructElement_3.sh \
Unittest_MEDstructElement_4.sh Unittest_MEDstructElement_5.sh Unittest_MEDstructElement_6.sh Unittest_MEDstructElement_7.sh \
Unittest_MEDstructElement_8.sh Unittest_MEDstructElement_9.sh Unittest_MEDstructElement_10.sh \
Unittest_MEDstructElement_11.sh Unittest_MEDprofile_1.sh Unittest_MEDprofile_2.sh Unittest_MEDlink_1.sh \
Unittest_MEDlink_2.sh Unittest_MEDlink_3.sh \
Unittest_MEDlocalization_1.sh Unittest_MEDlocalization_2.sh Unittest_MEDlocalization_3.sh \
Unittest_MEDinterp_1.sh Unittest_MEDinterp_2.sh Unittest_MEDinterp_3.sh \
Unittest_MEDparameter_1.sh Unittest_MEDparameter_2.sh Unittest_MEDparameter_3.sh \
Unittest_MEDfilter_1.sh Unittest_MEDfilter_2.sh

LDADD = $(top_builddir)/src/libmed.la
Unittest_MEDlibrary_1_SOURCES = Unittest_MEDlibrary_1.f 
Unittest_MEDfile_1_SOURCES = Unittest_MEDfile_1.f 
Unittest_MEDsupportMesh_1_SOURCES = Unittest_MEDsupportMesh_1.f 
Unittest_MEDsupportMesh_2_SOURCES = Unittest_MEDsupportMesh_2.f 
Unittest_MEDsupportMesh_3_SOURCES = Unittest_MEDsupportMesh_3.f 
Unittest_MEDstructElement_1_SOURCES = Unittest_MEDstructElement_1.f
Unittest_MEDstructElement_2_SOURCES = Unittest_MEDstructElement_2.f 
Unittest_MEDstructElement_3_SOURCES = Unittest_MEDstructElement_3.f 
Unittest_MEDstructElement_4_SOURCES = Unittest_MEDstructElement_4.f 
Unittest_MEDstructElement_5_SOURCES = Unittest_MEDstructElement_5.f 
Unittest_MEDstructElement_6_SOURCES = Unittest_MEDstructElement_6.f 
Unittest_MEDstructElement_7_SOURCES = Unittest_MEDstructElement_7.f 
Unittest_MEDstructElement_8_SOURCES = Unittest_MEDstructElement_8.f 
Unittest_MEDstructElement_9_SOURCES = Unittest_MEDstructElement_9.f
Unittest_MEDstructElement_10_SOURCES = Unittest_MEDstructElement_10.f 
Unittest_MEDstructElement_11_SOURCES = Unittest_MEDstructElement_11.f 
Unittest_MEDprofile_1_SOURCES = Unittest_MEDprofile_1.f 
Unittest_MEDprofile_2_SOURCES = Unittest_MEDprofile_2.f 
Unittest_MEDlink_1_SOURCES = Unittest_MEDlink_1.f 
Unittest_MEDlink_2_SOURCES = Unittest_MEDlink_2.f 
Unittest_MEDlink_3_SOURCES = Unittest_MEDlink_3.f 
Unittest_MEDlocalization_1_SOURCES = Unittest_MEDlocalization_1.f
Unittest_MEDlocalization_2_SOURCES = Unittest_MEDlocalization_2.f
Unittest_MEDlocalization_3_SOURCES = Unittest_MEDlocalization_3.f
Unittest_MEDinterp_1_SOURCES = Unittest_MEDinterp_1.f
Unittest_MEDinterp_2_SOURCES = Unittest_MEDinterp_2.f
Unittest_MEDinterp_3_SOURCES = Unittest_MEDinterp_3.f
Unittest_MEDparameter_1_SOURCES = Unittest_MEDparameter_1.f
Unittest_MEDparameter_2_SOURCES = Unittest_MEDparameter_2.f
Unittest_MEDparameter_3_SOURCES = Unittest_MEDparameter_3.f
Unittest_MEDfilter_1_SOURCES = Unittest_MEDfilter_1.f
Unittest_MEDfilter_2_SOURCES = Unittest_MEDfilter_2.f
CLEANFILES = \
Unittest_MEDfile_1.med \
Unittest_MEDfile_1.dump \
Unittest_MEDsupportMesh_1.med \
Unittest_MEDsupportMesh_1.dump \
Unittest_MEDstructElement_1.med \
Unittest_MEDstructElement_1.dump \
Unittest_MEDstructElement_4.med \
Unittest_MEDstructElement_4.dump \
Unittest_MEDstructElement_7.med \
Unittest_MEDstructElement_7.dump \
Unittest_MEDstructElement_9.med \
Unittest_MEDstructElement_9.dump \
Unittest_MEDprofile_1.med \
Unittest_MEDprofile_1.dump \
Unittest_MEDlink_1.med \
Unittest_MEDlink_1.dump \
Unittest_MEDlocalization_1.med \
Unittest_MEDlocalization_1.dump \
Unittest_MEDinterp_1.med \
Unittest_MEDinterp_1.dump \
Unittest_MEDparameter_1.med \
Unittest_MEDparameter_1.dump \
Unittest_MEDfilter_1.med \
Unittest_MEDfilter_1.dump \
Unittest_MEDfilter_2.med \
Unittest_MEDfilter_2.dump 

SUBDIRS = dumps.ref .
all: all-recursive

.SUFFIXES:
.SUFFIXES: .f .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/automake.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/unittests/f/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/unittests/f/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/config/automake.common $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

Unittest_MEDfile_1$(EXEEXT): $(Unittest_MEDfile_1_OBJECTS) $(Unittest_MEDfile_1_DEPENDENCIES) $(EXTRA_Unittest_MEDfile_1_DEPENDENCIES) 
	@rm -f Unittest_MEDfile_1$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDfile_1_OBJECTS) $(Unittest_MEDfile_1_LDADD) $(LIBS)

Unittest_MEDfilter_1$(EXEEXT): $(Unittest_MEDfilter_1_OBJECTS) $(Unittest_MEDfilter_1_DEPENDENCIES) $(EXTRA_Unittest_MEDfilter_1_DEPENDENCIES) 
	@rm -f Unittest_MEDfilter_1$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDfilter_1_OBJECTS) $(Unittest_MEDfilter_1_LDADD) $(LIBS)

Unittest_MEDfilter_2$(EXEEXT): $(Unittest_MEDfilter_2_OBJECTS) $(Unittest_MEDfilter_2_DEPENDENCIES) $(EXTRA_Unittest_MEDfilter_2_DEPENDENCIES) 
	@rm -f Unittest_MEDfilter_2$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDfilter_2_OBJECTS) $(Unittest_MEDfilter_2_LDADD) $(LIBS)

Unittest_MEDinterp_1$(EXEEXT): $(Unittest_MEDinterp_1_OBJECTS) $(Unittest_MEDinterp_1_DEPENDENCIES) $(EXTRA_Unittest_MEDinterp_1_DEPENDENCIES) 
	@rm -f Unittest_MEDinterp_1$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDinterp_1_OBJECTS) $(Unittest_MEDinterp_1_LDADD) $(LIBS)

Unittest_MEDinterp_2$(EXEEXT): $(Unittest_MEDinterp_2_OBJECTS) $(Unittest_MEDinterp_2_DEPENDENCIES) $(EXTRA_Unittest_MEDinterp_2_DEPENDENCIES) 
	@rm -f Unittest_MEDinterp_2$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDinterp_2_OBJECTS) $(Unittest_MEDinterp_2_LDADD) $(LIBS)

Unittest_MEDinterp_3$(EXEEXT): $(Unittest_MEDinterp_3_OBJECTS) $(Unittest_MEDinterp_3_DEPENDENCIES) $(EXTRA_Unittest_MEDinterp_3_DEPENDENCIES) 
	@rm -f Unittest_MEDinterp_3$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDinterp_3_OBJECTS) $(Unittest_MEDinterp_3_LDADD) $(LIBS)

Unittest_MEDlibrary_1$(EXEEXT): $(Unittest_MEDlibrary_1_OBJECTS) $(Unittest_MEDlibrary_1_DEPENDENCIES) $(EXTRA_Unittest_MEDlibrary_1_DEPENDENCIES) 
	@rm -f Unittest_MEDlibrary_1$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDlibrary_1_OBJECTS) $(Unittest_MEDlibrary_1_LDADD) $(LIBS)

Unittest_MEDlink_1$(EXEEXT): $(Unittest_MEDlink_1_OBJECTS) $(Unittest_MEDlink_1_DEPENDENCIES) $(EXTRA_Unittest_MEDlink_1_DEPENDENCIES) 
	@rm -f Unittest_MEDlink_1$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDlink_1_OBJECTS) $(Unittest_MEDlink_1_LDADD) $(LIBS)

Unittest_MEDlink_2$(EXEEXT): $(Unittest_MEDlink_2_OBJECTS) $(Unittest_MEDlink_2_DEPENDENCIES) $(EXTRA_Unittest_MEDlink_2_DEPENDENCIES) 
	@rm -f Unittest_MEDlink_2$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDlink_2_OBJECTS) $(Unittest_MEDlink_2_LDADD) $(LIBS)

Unittest_MEDlink_3$(EXEEXT): $(Unittest_MEDlink_3_OBJECTS) $(Unittest_MEDlink_3_DEPENDENCIES) $(EXTRA_Unittest_MEDlink_3_DEPENDENCIES) 
	@rm -f Unittest_MEDlink_3$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDlink_3_OBJECTS) $(Unittest_MEDlink_3_LDADD) $(LIBS)

Unittest_MEDlocalization_1$(EXEEXT): $(Unittest_MEDlocalization_1_OBJECTS) $(Unittest_MEDlocalization_1_DEPENDENCIES) $(EXTRA_Unittest_MEDlocalization_1_DEPENDENCIES) 
	@rm -f Unittest_MEDlocalization_1$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDlocalization_1_OBJECTS) $(Unittest_MEDlocalization_1_LDADD) $(LIBS)

Unittest_MEDlocalization_2$(EXEEXT): $(Unittest_MEDlocalization_2_OBJECTS) $(Unittest_MEDlocalization_2_DEPENDENCIES) $(EXTRA_Unittest_MEDlocalization_2_DEPENDENCIES) 
	@rm -f Unittest_MEDlocalization_2$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDlocalization_2_OBJECTS) $(Unittest_MEDlocalization_2_LDADD) $(LIBS)

Unittest_MEDlocalization_3$(EXEEXT): $(Unittest_MEDlocalization_3_OBJECTS) $(Unittest_MEDlocalization_3_DEPENDENCIES) $(EXTRA_Unittest_MEDlocalization_3_DEPENDENCIES) 
	@rm -f Unittest_MEDlocalization_3$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDlocalization_3_OBJECTS) $(Unittest_MEDlocalization_3_LDADD) $(LIBS)

Unittest_MEDparameter_1$(EXEEXT): $(Unittest_MEDparameter_1_OBJECTS) $(Unittest_MEDparameter_1_DEPENDENCIES) $(EXTRA_Unittest_MEDparameter_1_DEPENDENCIES) 
	@rm -f Unittest_MEDparameter_1$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDparameter_1_OBJECTS) $(Unittest_MEDparameter_1_LDADD) $(LIBS)

Unittest_MEDparameter_2$(EXEEXT): $(Unittest_MEDparameter_2_OBJECTS) $(Unittest_MEDparameter_2_DEPENDENCIES) $(EXTRA_Unittest_MEDparameter_2_DEPENDENCIES) 
	@rm -f Unittest_MEDparameter_2$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDparameter_2_OBJECTS) $(Unittest_MEDparameter_2_LDADD) $(LIBS)

Unittest_MEDparameter_3$(EXEEXT): $(Unittest_MEDparameter_3_OBJECTS) $(Unittest_MEDparameter_3_DEPENDENCIES) $(EXTRA_Unittest_MEDparameter_3_DEPENDENCIES) 
	@rm -f Unittest_MEDparameter_3$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDparameter_3_OBJECTS) $(Unittest_MEDparameter_3_LDADD) $(LIBS)

Unittest_MEDprofile_1$(EXEEXT): $(Unittest_MEDprofile_1_OBJECTS) $(Unittest_MEDprofile_1_DEPENDENCIES) $(EXTRA_Unittest_MEDprofile_1_DEPENDENCIES) 
	@rm -f Unittest_MEDprofile_1$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDprofile_1_OBJECTS) $(Unittest_MEDprofile_1_LDADD) $(LIBS)

Unittest_MEDprofile_2$(EXEEXT): $(Unittest_MEDprofile_2_OBJECTS) $(Unittest_MEDprofile_2_DEPENDENCIES) $(EXTRA_Unittest_MEDprofile_2_DEPENDENCIES) 
	@rm -f Unittest_MEDprofile_2$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDprofile_2_OBJECTS) $(Unittest_MEDprofile_2_LDADD) $(LIBS)

Unittest_MEDstructElement_1$(EXEEXT): $(Unittest_MEDstructElement_1_OBJECTS) $(Unittest_MEDstructElement_1_DEPENDENCIES) $(EXTRA_Unittest_MEDstructElement_1_DEPENDENCIES) 
	@rm -f Unittest_MEDstructElement_1$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDstructElement_1_OBJECTS) $(Unittest_MEDstructElement_1_LDADD) $(LIBS)

Unittest_MEDstructElement_10$(EXEEXT): $(Unittest_MEDstructElement_10_OBJECTS) $(Unittest_MEDstructElement_10_DEPENDENCIES) $(EXTRA_Unittest_MEDstructElement_10_DEPENDENCIES) 
	@rm -f Unittest_MEDstructElement_10$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDstructElement_10_OBJECTS) $(Unittest_MEDstructElement_10_LDADD) $(LIBS)

Unittest_MEDstructElement_11$(EXEEXT): $(Unittest_MEDstructElement_11_OBJECTS) $(Unittest_MEDstructElement_11_DEPENDENCIES) $(EXTRA_Unittest_MEDstructElement_11_DEPENDENCIES) 
	@rm -f Unittest_MEDstructElement_11$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDstructElement_11_OBJECTS) $(Unittest_MEDstructElement_11_LDADD) $(LIBS)

Unittest_MEDstructElement_2$(EXEEXT): $(Unittest_MEDstructElement_2_OBJECTS) $(Unittest_MEDstructElement_2_DEPENDENCIES) $(EXTRA_Unittest_MEDstructElement_2_DEPENDENCIES) 
	@rm -f Unittest_MEDstructElement_2$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDstructElement_2_OBJECTS) $(Unittest_MEDstructElement_2_LDADD) $(LIBS)

Unittest_MEDstructElement_3$(EXEEXT): $(Unittest_MEDstructElement_3_OBJECTS) $(Unittest_MEDstructElement_3_DEPENDENCIES) $(EXTRA_Unittest_MEDstructElement_3_DEPENDENCIES) 
	@rm -f Unittest_MEDstructElement_3$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDstructElement_3_OBJECTS) $(Unittest_MEDstructElement_3_LDADD) $(LIBS)

Unittest_MEDstructElement_4$(EXEEXT): $(Unittest_MEDstructElement_4_OBJECTS) $(Unittest_MEDstructElement_4_DEPENDENCIES) $(EXTRA_Unittest_MEDstructElement_4_DEPENDENCIES) 
	@rm -f Unittest_MEDstructElement_4$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDstructElement_4_OBJECTS) $(Unittest_MEDstructElement_4_LDADD) $(LIBS)

Unittest_MEDstructElement_5$(EXEEXT): $(Unittest_MEDstructElement_5_OBJECTS) $(Unittest_MEDstructElement_5_DEPENDENCIES) $(EXTRA_Unittest_MEDstructElement_5_DEPENDENCIES) 
	@rm -f Unittest_MEDstructElement_5$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDstructElement_5_OBJECTS) $(Unittest_MEDstructElement_5_LDADD) $(LIBS)

Unittest_MEDstructElement_6$(EXEEXT): $(Unittest_MEDstructElement_6_OBJECTS) $(Unittest_MEDstructElement_6_DEPENDENCIES) $(EXTRA_Unittest_MEDstructElement_6_DEPENDENCIES) 
	@rm -f Unittest_MEDstructElement_6$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDstructElement_6_OBJECTS) $(Unittest_MEDstructElement_6_LDADD) $(LIBS)

Unittest_MEDstructElement_7$(EXEEXT): $(Unittest_MEDstructElement_7_OBJECTS) $(Unittest_MEDstructElement_7_DEPENDENCIES) $(EXTRA_Unittest_MEDstructElement_7_DEPENDENCIES) 
	@rm -f Unittest_MEDstructElement_7$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDstructElement_7_OBJECTS) $(Unittest_MEDstructElement_7_LDADD) $(LIBS)

Unittest_MEDstructElement_8$(EXEEXT): $(Unittest_MEDstructElement_8_OBJECTS) $(Unittest_MEDstructElement_8_DEPENDENCIES) $(EXTRA_Unittest_MEDstructElement_8_DEPENDENCIES) 
	@rm -f Unittest_MEDstructElement_8$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDstructElement_8_OBJECTS) $(Unittest_MEDstructElement_8_LDADD) $(LIBS)

Unittest_MEDstructElement_9$(EXEEXT): $(Unittest_MEDstructElement_9_OBJECTS) $(Unittest_MEDstructElement_9_DEPENDENCIES) $(EXTRA_Unittest_MEDstructElement_9_DEPENDENCIES) 
	@rm -f Unittest_MEDstructElement_9$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDstructElement_9_OBJECTS) $(Unittest_MEDstructElement_9_LDADD) $(LIBS)

Unittest_MEDsupportMesh_1$(EXEEXT): $(Unittest_MEDsupportMesh_1_OBJECTS) $(Unittest_MEDsupportMesh_1_DEPENDENCIES) $(EXTRA_Unittest_MEDsupportMesh_1_DEPENDENCIES) 
	@rm -f Unittest_MEDsupportMesh_1$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDsupportMesh_1_OBJECTS) $(Unittest_MEDsupportMesh_1_LDADD) $(LIBS)

Unittest_MEDsupportMesh_2$(EXEEXT): $(Unittest_MEDsupportMesh_2_OBJECTS) $(Unittest_MEDsupportMesh_2_DEPENDENCIES) $(EXTRA_Unittest_MEDsupportMesh_2_DEPENDENCIES) 
	@rm -f Unittest_MEDsupportMesh_2$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDsupportMesh_2_OBJECTS) $(Unittest_MEDsupportMesh_2_LDADD) $(LIBS)

Unittest_MEDsupportMesh_3$(EXEEXT): $(Unittest_MEDsupportMesh_3_OBJECTS) $(Unittest_MEDsupportMesh_3_DEPENDENCIES) $(EXTRA_Unittest_MEDsupportMesh_3_DEPENDENCIES) 
	@rm -f Unittest_MEDsupportMesh_3$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(Unittest_MEDsupportMesh_3_OBJECTS) $(Unittest_MEDsupportMesh_3_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.f.o:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(AM_V_F77)$(LTF77COMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst $(AM_TESTS_FD_REDIRECT); then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-checkPROGRAMS clean-generic \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile

#AM_ETAGSFLAGS=
#SWIG_PYTHON_OPT=

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
