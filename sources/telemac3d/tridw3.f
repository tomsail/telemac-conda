!                   *****************
                    SUBROUTINE TRIDW3
!                   *****************
!
     &(WSCONV,FLUVER,SUMFLU,ERROR,PRESSURE,COR_INT,COR_VER,
     & VOLU,VOLUN,U,UCONV,VCONV,WCONV,DT,NPOIN3,
     & SIGMAG,OPTBAN,MESH3D,MTRA1,MASKEL,NPOIN2,T2_01,NPLAN,
     & FLUEXT,NSCE,SOURCES,RAIN,PLUIE,FLUINT,NETAGE,UNSV2D,SVIDE,
     & NELEM2,MSK,N_ADV,VOLU2D,INFOGR,DSSUDT,IELM3,DM1,
     & GRAZCO,MESH2D,SEM3D,NELEM3,GRADZF,OPTSOU)
!
!***********************************************************************
! TELEMAC3D   V7P2
!***********************************************************************
!
!brief    CORRECTS FLUXES AND COMPUTES AN AVERAGED VALUE OF
!+        H * WSTAR IN A WAY COMPATIBLE WITH THE PSI SCHEME.
!+        See release notes on Telemac version 6.1, chapter 2.
!
!history  J-M HERVOUET (LNHE)
!+        27/03/2012
!+        V6P2
!+   First version.
!
!history  A. JOLY (EDF LAB, LNHE)
!+        27/08/2015
!+        V7P1
!+   Imposed flowrates on the bed.
!
!history  A. LEROY (EDF LAB, LNHE)
!+        28/08/2015
!+        V7P1
!+   Add the option OPTSOU to treat sources as a dirac (OPTSOU=2) or
!+   not (OPTSOU=1).
!
!history  J-M HERVOUET (EDF LAB, LNHE)
!+        20/06/2016
!+        V7P2
!+   OPTSOU added at the end of the call to RHS_PRESSURE. Missing
!+   USE INTERFACE_TELEMAC3D added (reason why this bug was overlooked).
!
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!| COR_EXT        |<->| WORK ARRAY, CORRECTION OF FLUEXT
!| COR_INT        |<->| WORK ARRAY, CORRECTION OF FLUINT
!| DM1            |-->| THE PIECE-WISE CONSTANT PART OF ADVECTION FIELD
!|                |   | IS DM1*GRAD(ZCONV).
!| DSSUDT         |-->| DERIVATIVE IN TIME OF FREE SURFACE
!| DT             |-->| TIME STEP IN S
!| ERROR          |<->| WORK ARRAY
!| FLUINT         |-->| INTERNAL FLUXES
!| FLUEXT         |-->| EXTERNAL FLUXES
!| FLUVER         |<->| WORK ARRAY, VERTICAL FLUXES
!| GRADZF         |-->| GRADIENT OF BOTTOM
!| GRAZCO         |-->| THE PIECE-WISE CONSTANT PART OF ADVECTION FIELD
!|                |   | IS DM1*GRAD(ZCONV). GRAZCO IS GRAD(ZCONV)
!| IELM3          |-->| TYPE OF ELEMENT IN 3D
!| INFOGR         |-->| IF YES, PRINTS ON LISTING RESULTS OF SOLVERS
!| MASKEL         |-->| MASKING OF ELEMENTS
!|                |   | =1. : NORMAL   =0. : MASKED ELEMENT
!| MESH2D         |-->| 2D MESH STRUCTURE
!| MESH3D         |-->| 3D MESH STRUCTURE
!| MSK            |-->| IF YES, THERE IS MASKED ELEMENTS.
!| MTRA1          |<->| WORK MATRIX
!| N_ADV          |-->| NUMBER OF FUNCTIONS TO ADVECT FOR EVERY SCHEME
!| NELEM2         |-->| NUMBER OF ELEMENTS IN 2D
!| NELEM3         |-->| NUMBER OF ELEMENTS IN 3D
!| NETAGE         |-->| NPLAN-1
!| NPLAN          |-->| NUMBER OF PLANES IN THE 3D MESH OF PRISMS
!| NPOIN2         |-->| NUMBER OF POINTS IN 2D
!| NPOIN3         |-->| NUMBER OF POINTS IN 3D
!| NSCE           |-->| NUMBER OF SOURCES
!| OPTBAN         |-->| OPTION FOR THE TREATMENT OF TIDAL FLATS
!| PLUIE          |-->| VALUE OF RAIN OR EVAPORATION IN M/S
!| PRESSURE       |<->| WORK ARRAY, PRESSURE
!| RAIN           |-->| IF YES ,THERE IS RAIN OR EVAPORATION
!| SEM3D          |-->| RIGHT-HAND SIDE OF 3D SYSTEM
!| SIGMAG         |-->| IF YES, GENERALISED SIGMA TRANSFORMATION
!| SOURCES        |-->| FLUXES OF SOURCES
!| SUMFLU         |<->| WORK ARRAY, A SUM OF FLUXES
!| SVIDE          |-->| VOID BIEF_OBJ STRUCTURE
!| T2_01          |<->| 2D WORK ARRAY
!| U              |-->| VELOCITY U
!| UCONV          |-->| ADVECTION VELOCITY ALONG X
!| UNSV2D         |-->| INVERSE OF INTEGRALS OF 2D TEST FUNCTIONS
!| VCONV          |-->| ADVECTION VELOCITY ALONG Y
!| WCONV          |-->| ADVECTION VELOCITY ALONG Z
!| VOLU           |-->| VOLUMES (INTEGRAL OF BASES) AT NEW TIME STEP
!| VOLUN          |-->| VOLUMES (INTEGRAL OF BASES) AT OLD TIME STEP
!| VOLU2D         |-->| INTEGRAL OF 2D TEST FUNCTIONS
!| WSCONV         |<--| COMPOSANTE WSTAR DE LA VITESSE A N+1
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
      USE BIEF
      USE DECLARATIONS_TELEMAC
      USE DECLARATIONS_TELEMAC3D, ONLY:BEDBOU,BEDFLU
      USE INTERFACE_TELEMAC3D, EX_TRIDW3 => TRIDW3
!
      USE DECLARATIONS_SPECIAL
      IMPLICIT NONE
!
!+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
!
      INTEGER, INTENT(IN)           :: NPOIN2,NPOIN3,IELM3,NELEM3,NETAGE
      INTEGER, INTENT(IN)           :: NPLAN,NSCE,OPTBAN,N_ADV(0:15)
      INTEGER, INTENT(IN)           :: NELEM2,OPTSOU
      LOGICAL, INTENT(IN)           :: RAIN,MSK,INFOGR,SIGMAG
      DOUBLE PRECISION, INTENT(IN)  :: DT
      TYPE(BIEF_OBJ), INTENT(INOUT) :: WSCONV,FLUVER,SUMFLU,ERROR,FLUINT
      TYPE(BIEF_OBJ), INTENT(INOUT) :: PRESSURE,MTRA1,SEM3D,UCONV
      TYPE(BIEF_OBJ), INTENT(IN)    :: U,VCONV,WCONV,MASKEL
      TYPE(BIEF_OBJ), INTENT(INOUT) :: COR_INT,COR_VER,T2_01
      TYPE(BIEF_OBJ), INTENT(IN)    :: VOLU,VOLUN,FLUEXT,SOURCES,DSSUDT
      TYPE(BIEF_OBJ), INTENT(IN)    :: DM1,GRAZCO,GRADZF,PLUIE
      TYPE(BIEF_OBJ), INTENT(IN)    :: UNSV2D,VOLU2D,SVIDE
      TYPE(BIEF_MESH), INTENT(INOUT):: MESH2D,MESH3D
!
!+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
!
      INTEGER IETAGE, I,IAD1,IAD2,IAD3,IS,IPLAN,IPOIN2,IIS
      DOUBLE PRECISION :: SURDT
      CHARACTER(LEN=16) FORMUL
      LOGICAL, PARAMETER :: TESTING = .FALSE.
      DOUBLE PRECISION TMP1
!
!=======================================================================
!
      SURDT=1.D0/DT
      CALL CPSTVC(U,SUMFLU)
      CALL CPSTVC(U,FLUVER)
      CALL CPSTVC(U,UCONV)
!
      DO I=1,NPOIN3
!       INITIALISING PRESSURE
        PRESSURE%R(I)=0.D0
      ENDDO
!
      CALL PREDIV(PRESSURE,UCONV,VCONV,WCONV,
     &            INFOGR,.FALSE.,3,.TRUE.,.FALSE.,.FALSE.)
      CALL CPSTVC(UCONV,FLUVER)
      CALL OS('X=C     ', X=FLUVER,C=1.D0)
!     FLUINT PART OF THE PRESSURE EQUATION RIGHT HAND SIDE
      FORMUL = 'VECDIF *     HOR'
      IF(SIGMAG.OR.OPTBAN.EQ.1) FORMUL(7:7)='2'
      CALL VECTOR(COR_INT,'=',FORMUL,IELM3,1.D0,
     &            FLUVER,FLUVER,FLUVER,
     &            PRESSURE,SVIDE,SVIDE,
     &            MESH3D,MSK,MASKEL)
!     ON RETURN MESH3D%W%R IS THE EBE MATRIX VECTOR PRODUCT
!     COR_INT IS DONE BUT WILL BE REDONE BELOW
!     EBE TERMS AT FREE SURFACE = -(ALL TERMS ON THE SAME VERTICAL)
      CALL COMPLETE_EBE_FLUINT(MESH3D%W%R,NELEM2,NPLAN)
      IF(N_ADV(ADV_NSC).GT.0.OR.N_ADV(ADV_PSI   ).GT.0
     &                      .OR.N_ADV(ADV_NSC_TF).GT.0) THEN
!       RESULT SUBTRACTED TO MTRA1
        DO I=1,6*MESH3D%NELEM
          MTRA1%X%R(I)=MTRA1%X%R(I)-MESH3D%W%R(I)
        ENDDO
      ENDIF
!     RE-ASSEMBLING AFTER COMPLETION AT THE FREE SURFACE
      CALL ASSVEC(COR_INT%R,MESH3D%IKLE%I,
     &            NPOIN3,NELEM3,NELEM3,
     &            MESH3D%W%R,.TRUE.,1,MSK,MASKEL%R,
     &            BIEF_NBPEL(IELM3,MESH3D))
!     VERTICAL PART OF RIGHT-HAND SIDE
!     FORMUL = 'VECDIF *     VER'
!     IF(SIGMAG.OR.OPTBAN.EQ.1) FORMUL(7:7)='2'
!     CALL VECTOR(COR_VER,'=',FORMUL,IELM3,1.D0,
!    *            FLUVER,FLUVER,FLUVER,PRESSURE,SVIDE,SVIDE,
!    *            MESH3D,MSK,MASKEL)
!     OTHER POSSIBILITY: IT IS RHS-FLUINT PART
!     RHS_PRESSURE IS CALLED HERE JUST TO GET THE INITIAL
!     RHS OF THE PRESSURE EQUATION (DESTROYED BY SOLVER)
!     COULD BE OPTIMISED SOMEHOW
      CALL RHS_PRESSURE(SEM3D,UCONV,VCONV,WCONV,IELM3,DM1,
     &                  GRAZCO,SVIDE,MESH3D,MSK,MASKEL,FLUEXT,
     &                  NSCE,RAIN,PLUIE,SOURCES,GRADZF,VOLU2D,
     &                  DSSUDT,NPOIN2,NPOIN3,NPLAN,OPTSOU)
      CALL OS('X=Y-Z   ',X=COR_VER,Y=SEM3D,Z=COR_INT)
!
      IF(TESTING) THEN
!       TESTING SUMS OF FLUVER ON VERTICAL
        DO I=1,NPOIN2
          T2_01%R(I)=0.D0
        ENDDO
        DO IPLAN=1,NPLAN
          DO I=1,NPOIN2
            T2_01%R(I)=T2_01%R(I)+COR_VER%R((IPLAN-1)*NPOIN2+I)
          ENDDO
        ENDDO
        IF(NCSIZE.GT.1) CALL PARCOM(T2_01,2,MESH2D)
!       AD: AVOID I/O OF ACTIVE FUNCTION RESULT WITH ALLOCATBLE
        TMP1 = P_DOTS(T2_01,T2_01,MESH2D)
        WRITE(LU,*) 'COR_VER ON VERTICAL=',TMP1
      ENDIF
!
!-----------------------------------------------------------------------
!
!     LOOP 1
!
!     WSCONV OF LAST LEVEL WILL BE 0 (CHECKED,IT WORKS !)
!     BECAUSE SUM ON THE VERTICAL=2D CONTINUITY EQUATION
!     HENCE LAST LEVEL NOT SOLVED, SO LOOP UP TO NETAGE
!     A CONSEQUENCE IS THAT RAIN AND EVAPORATION IS NOT SEEN HERE
!
      CALL FLUVER_2(FLUVER,UCONV,VCONV,WCONV,GRADZF,VOLU2D,DSSUDT,
     &              NPLAN,NPOIN2)
!
      DO I=1,NPOIN3
        FLUVER%R(I)=FLUVER%R(I)+SURDT*(VOLU%R(I)-VOLUN%R(I))
      ENDDO
!
      IF(TESTING) THEN
        DO I=1,NPOIN2
          T2_01%R(I)=0.D0
        ENDDO
        DO IPLAN=1,NPLAN
          DO I=1,NPOIN2
            T2_01%R(I)=T2_01%R(I)+FLUVER%R((IPLAN-1)*NPOIN2+I)
          ENDDO
        ENDDO
        IF(NCSIZE.GT.1) CALL PARCOM(T2_01,2,MESH2D)
!       AD: AVOID I/O OF ACTIVE FUNCTION RESULT WITH ALLOCATBLE
        TMP1 = P_DOTS(T2_01,T2_01,MESH2D)
        WRITE(LU,*) 'FLUVER ON VERTICAL=', TMP1
!       CHECKING SUM OF ERRORS ON THE VERTICAL
!       IN PARALLELISM : WORKING HERE ON NON-ASSEMBLED VALUES
        DO I=1,NPOIN3
          SUMFLU%R(I)=FLUEXT%R(I)+SURDT*(VOLU%R(I)-VOLUN%R(I))
        ENDDO
!       WITH SOURCES (EVAPORATION IS LACKING HERE !!!!!, MAYBE IT CANNOT BE DISCARDED
!       LIKE WITH PREVIOUS TRIDW2)
        IF(NSCE.GT.0) THEN
!         WITH SOURCES
          IF(OPTSOU.EQ.1) THEN
          ! SOURCE NOT CONSIDERED AS A DIRAC
            DO IS=1,NSCE
              IIS=IS
!             HERE IN PARALLEL SOURCES WITHOUT PARCOM
!             ARE STORED AT ADRESSES IS+NSCE (SEE SOURCES_SINKS.F)
              IF(NCSIZE.GT.1) IIS=IIS+NSCE
              DO I=1,NPOIN3
!               NON ASSEMBLED SOURCES
                SUMFLU%R(I)=SUMFLU%R(I)-SOURCES%ADR(IIS)%P%R(I)
              ENDDO
            ENDDO
          ELSE IF(OPTSOU.EQ.2) THEN
            IIS=1
!           HERE IN PARALLEL SOURCES WITHOUT PARCOM
!           ARE STORED AT ADRESSES IS+NSCE (SEE SOURCES_SINKS.F)
            IF(NCSIZE.GT.1) IIS=2
          ! SOURCE CONSIDERED AS A DIRAC
            DO I=1,NPOIN3
!             NON ASSEMBLED SOURCES
              SUMFLU%R(I)=SUMFLU%R(I)-SOURCES%ADR(IIS)%P%R(I)
            ENDDO
          ENDIF
        ENDIF
!       WITH BED FLUXES
        IF(BEDBOU) THEN
          DO I=1,NPOIN2
!           NON ASSEMBLED BED FLUXES
            SUMFLU%R(I)=SUMFLU%R(I)-BEDFLU%R(I)
          ENDDO
        ENDIF
        IF(RAIN) THEN
          DO IPOIN2=1,NPOIN2
            I=NPOIN3-NPOIN2+IPOIN2
            SUMFLU%R(I)=SUMFLU%R(I)-PLUIE%R(IPOIN2)
          ENDDO
        ENDIF
        DO I=1,NPOIN3
          ERROR%R(I)=SUMFLU%R(I)-FLUVER%R(I)-FLUINT%R(I)
        ENDDO
        DO I=1,NPOIN2
          T2_01%R(I)=0.D0
        ENDDO
        DO IPLAN=1,NPLAN
          DO I=1,NPOIN2
            T2_01%R(I)=T2_01%R(I)+ERROR%R((IPLAN-1)*NPOIN2+I)
          ENDDO
        ENDDO
        IF(NCSIZE.GT.1) CALL PARCOM(T2_01,2,MESH2D)
!       AD: AVOID I/O OF ACTIVE FUNCTION RESULT WITH ALLOCATBLE
        TMP1 = P_DOTS(T2_01,T2_01,MESH2D)
        WRITE(LU,*) 'SUM OF ERRORS ON VERTICAL=', TMP1
        IF(NCSIZE.GT.1) CALL PARCOM(ERROR,2,MESH3D)
        TMP1 = P_DOTS(ERROR,ERROR,MESH3D)
        WRITE(LU,*) 'ERROR INITIALE=', TMP1
      ENDIF
!
!     CORRECTING WITH PRESSURE GRADIENT FLUXES
!
      DO I=1,NPOIN3
        FLUINT%R(I)=FLUINT%R(I)-COR_INT%R(I)
        FLUVER%R(I)=FLUVER%R(I)-COR_VER%R(I)
      ENDDO
!
      IF(TESTING) THEN
        DO I=1,NPOIN3
          ERROR%R(I)=SUMFLU%R(I)-FLUVER%R(I)-FLUINT%R(I)
        ENDDO
        DO I=1,NPOIN2
          T2_01%R(I)=0.D0
        ENDDO
        DO IPLAN=1,NPLAN
          DO I=1,NPOIN2
            T2_01%R(I)=T2_01%R(I)+ERROR%R((IPLAN-1)*NPOIN2+I)
          ENDDO
        ENDDO
        IF(NCSIZE.GT.1) CALL PARCOM(T2_01,2,MESH2D)
!       AD: AVOID I/O OF ACTIVE FUNCTION RESULT WITH ALLOCATBLE
        TMP1 = P_DOTS(T2_01,T2_01,MESH2D)
        WRITE(LU,*) 'NOUVELLE SOMME ERROR VERTICALE=',TMP1
        IF(NCSIZE.GT.1) CALL PARCOM(ERROR,2,MESH3D)
        TMP1 = P_DOTS(ERROR,ERROR,MESH3D)
        WRITE(LU,*) 'ERROR=',TMP1
        IF(NCSIZE.GT.1) CALL PARCOM(COR_INT,2,MESH3D)
        IF(NCSIZE.GT.1) CALL PARCOM(COR_VER,2,MESH3D)
        TMP1 = P_DOTS(COR_INT,COR_INT,MESH3D)
        WRITE(LU,*) 'CORRECTION H=',TMP1
        TMP1 = P_DOTS(COR_VER,COR_VER,MESH3D)
        WRITE(LU,*) 'CORRECTION V=',TMP1
      ENDIF
!
!     POSSIBLE FINAL CORRECTION LIKE TRIDW2
!     TO CORRECT TRUNCATION AND SOLVER ERRORS
!
!     DO I=1,NPOIN3
!       FLUVER%R(I)=SUMFLU%R(I)-FLUINT%R(I)
!     ENDDO
!
!-----------------------------------------------------------------------
!
!     PARALLELISM: NOW ASSEMBLING FLUVER
!
      IF(NCSIZE.GT.1) CALL PARCOM(FLUVER,2,MESH3D)
!
!     FINDING WSCONV FOR ADVECTION
!
      IAD3=0
!     DO IETAGE = 1,NETAGE
      DO IETAGE = 1,NETAGE+1
        DO I=1,NPOIN2
          IAD3=IAD3+1
          WSCONV%R(IAD3)=-FLUVER%R(IAD3)*UNSV2D%R(I)
        ENDDO
      ENDDO
!
      IF(NETAGE.GT.1) THEN
        IAD1=0
        IAD2=NPOIN2
        DO IETAGE = 2,NETAGE+1
          DO I=1,NPOIN2
            IAD1=IAD1+1
            IAD2=IAD2+1
            WSCONV%R(IAD2)=WSCONV%R(IAD2)+WSCONV%R(IAD1)
          ENDDO
        ENDDO
      ENDIF
!
!     CHECKING WSCONV OF LAST PLANE
!
      IF(TESTING) THEN
        DO I=1,NPOIN2
          T2_01%R(I)=0.D0
        ENDDO
        DO I=1,NPOIN2
          T2_01%R(I)=T2_01%R(I)+WSCONV%R((NPLAN-1)*NPOIN2+I)
        ENDDO
        TMP1 = P_DOTS(T2_01,T2_01,MESH2D)
        WRITE(LU,*) 'WSCONV FREE SURFACE=', TMP1
      ENDIF
!
      RETURN
      END
