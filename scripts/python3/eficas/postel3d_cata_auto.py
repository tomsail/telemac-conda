
# -*- coding: latin-1 -*-

from Accas import *
class DateJJMMAAAA:
  def __init__(self):
    self.ntuple=3

  def __convert__(self,valeur):
    if type(valeur) == types.StringType: return None
    if len(valeur) != self.ntuple: return None
    return valeur

  def info(self):
    return "Date : jj/mm/aaaa "

  __repr__=info
  __str__=info

class grma(GEOM):
  pass

import types
class Tuple:
  def __init__(self,ntuple):
    self.ntuple=ntuple

  def __convert__(self,valeur):
    if type(valeur) == types.StringType:
      return None
    if len(valeur) != self.ntuple:
      return None
    return valeur

  def info(self):
    return "Tuple de %s elements" % self.ntuple



JdC = JDC_CATA (code = 'POSTEL3D',
                execmodul = None,
                )
# =======================================================================
# Catalog entry for the MAP function : c_pre_interfaceBody_mesh
# =======================================================================

VERSION_CATALOGUE="V8P4"
# -----------------------------------------------------------------------
COMPUTATION_ENVIRONMENT = PROC(nom= "COMPUTATION_ENVIRONMENT",op = None,
# -----------------------------------------------------------------------
#   -----------------------------------
    INPUT = FACT(statut='o',
#   -----------------------------------
#       -----------------------------------
        DATA = FACT(statut='o',
#       -----------------------------------
#           -----------------------------------
            RD_RESULT_FILE_FORMAT = SIMP(statut ='o',
#           -----------------------------------
                typ = 'TXM',
                into = ['SERAFIN','SERAFIND','MED'],
                defaut = 'SERAFIN',
                fr = """Format du fichier de resultats.
Les valeurs possibles sont :
\begin{itemize}
\item SERAFIN : format standard simple precision pour \tel ;
\item SERAFIND: format standard double precision pour \tel ;
\item MED     : format MED base sur HDF5.
\end{itemize}""",
                ang = """Results file format. Possible values are:
\begin{itemize}
\item SERAFIN : classical single precision format in \tel,
\item SERAFIND: classical double precision format in \tel,
\item MED     : MED format based on HDF5.
\end{itemize}""",
            ),
#           -----------------------------------
            RD_RESULT_FILE = SIMP(statut ='o',
#           -----------------------------------
                typ = ('Fichier','All Files (*)'),
                defaut = '',
                fr = """Nom du fichier des resultats 3D obtenu par un calcul avec
\telemac{3D}.""",
                ang = """Name of the 3D result file generated by a \telemac{3D} run.""",
            ),
#           -----------------------------------
            GEOMETRY_FILE_FORMAT = SIMP(statut ='o',
#           -----------------------------------
                typ = 'TXM',
                into = ['SERAFIN','SERAFIND','MED'],
                defaut = 'SERAFIN',
                fr = """Format du fichier de geometrie.
Les valeurs possibles sont :
\begin{itemize}
\item SERAFIN : format standard simple precision pour \tel ;
\item SERAFIND: format standard double precision pour \tel ;
\item MED     : format MED base sur HDF5.
\end{itemize}""",
                ang = """Geometry file format.
Possible values are:
\begin{itemize}
\item SERAFIN : classical single precision format in \tel,
\item SERAFIND: classical double precision format in \tel,
\item MED     : MED format based on HDF5.
\end{itemize}""",
            ),
#           -----------------------------------
            GEOMETRY_FILE = SIMP(statut ='o',
#           -----------------------------------
                typ = ('Fichier','All Files (*)'),
                defaut = '',
                fr = """Nom du fichier de geometrie.""",
                ang = """Name of the geometry file.""",
            ),
#           -----------------------------------
            FORTRAN_FILE = SIMP(statut ='f',
#           -----------------------------------
                typ = ('Fichier','All Files (*)'),
                defaut = '',
                fr = """Nom du fichier FORTRAN a soumettre.\\
Il ne sert a priori qu''a dimensionner les tableaux utilises par
\postel, mais peut contenir des sous-programmes modifies ou propres
a l''utilisateur.""",
                ang = """Name of FORTRAN file to be submitted.\\
It is supposed to be used only to dimension the array used by \postel
but can also contain subroutines modified by the user.""",
            ),
        ),
    ),
#   -----------------------------------
    GLOBAL = FACT(statut='o',
#   -----------------------------------
#       -----------------------------------
        PARALLEL_PROCESSORS = SIMP(statut ='f',
#       -----------------------------------
            typ = 'I',
            defaut = 0,
            fr = """Nombre de processeurs pour la decomposition en parallele:
\begin{itemize}
\item 0 : 1 machine, compilation sans bibliotheque de parallelisme ;
\item 1 : 1 machine, compilation avec bibliotheque de parallelisme ;
\item 2 : 2 processeurs ou machines en parallele etc...
\end{itemize}""",
            ang = """Number of processors for domain partition.
\begin{itemize}
\item 0: 1 machine, compiling without parallel library,
\item 1: 1 machine, compiling with a parallel library,
\item 2: 2 processors or machines in parallel etc...
\end{itemize}""",
        ),
    ),
)
# -----------------------------------------------------------------------
GENERAL = PROC(nom= "GENERAL",op = None,
# -----------------------------------------------------------------------
#   -----------------------------------
    NUMBER_OF_FIRST_RECORD_FOR_CROSS_SECTIONS = SIMP(statut ='o',
#   -----------------------------------
        typ = 'I',
        defaut = 1,
        fr = """Seuls les enregistrements au-dela de ce numero seront traites
pour les coupes.""",
        ang = """Only records after that time will be in the cross sections.""",
    ),
#   -----------------------------------
    PRINTOUT_PERIOD_FOR_CROSS_SECTIONS = SIMP(statut ='o',
#   -----------------------------------
        typ = 'I',
        defaut = 1,
        fr = """Periode en nombre d''enregistrements entre 2 coupes.""",
        ang = """Period in number of records between two cross sections.""",
    ),
)
# -----------------------------------------------------------------------
HORIZONTAL_CROSS_SECTION = PROC(nom= "HORIZONTAL_CROSS_SECTION",op = None,
# -----------------------------------------------------------------------
#   -----------------------------------
    NUMBER_OF_HORIZONTAL_CROSS_SECTIONS = SIMP(statut ='o',
#   -----------------------------------
        typ = 'I',
        defaut = 0,
        fr = """Permet de definir simultanement plusieurs coupes horizontales.
La valeur maximale autorisee est 9.""",
        ang = """Allow multiple horizontal sections. The maximum value is 9.""",
    ),
#   -----------------------------------
    b_NUMBER_OF_HORIZONTAL_CROSS_SECTIONSG = BLOC(condition="NUMBER_OF_HORIZONTAL_CROSS_SECTIONS > 0",
#   -----------------------------------
#       -----------------------------------
        HORIZONTAL_CROSS_SECTION_FILE_FORMAT = SIMP(statut ='o',
#       -----------------------------------
            typ = 'TXM',
            into = ['SERAFIN','SERAFIND','MED'],
            defaut = 'SERAFIN',
            fr = """Format du fichier de resultats.
Les valeurs possibles sont :
\begin{itemize}
\item SERAFIN : format standard simple precision pour \tel ;
\item SERAFIND: format standard double precision pour \tel ;
\item MED     : format MED base sur HDF5.
\end{itemize}""",
            ang = """Results file format. Possible values are:
\begin{itemize}
\item SERAFIN : classical single precision format in \tel,
\item SERAFIND: classical double precision format in \tel,
\item MED     : MED format based on HDF5.
\end{itemize}""",
        ),
#       -----------------------------------
        HORIZONTAL_CROSS_SECTION_FILE = SIMP(statut ='o',
#       -----------------------------------
            typ = ('Fichier','All Files (*)','Sauvegarde'),
            defaut = '',
            fr = """Nom generique des fichiers des coupes horizontales.
Le fichier contenant la coupe $i$ aura pour nom ce nom generique suivi
de l''extension .i.""",
            ang = """Generic name for the horizontal cross sections file.
The file containing the cross section $i$ name will be the generic
followed by the extension .i.""",
        ),
#       -----------------------------------
        REFERENCE_LEVEL_FOR_EACH_HORIZONTAL_CROSS_SECTION = SIMP(statut ='o',
#       -----------------------------------
            typ = 'I', min=0, max='**',
            defaut = [0,1,2,3,4,5,6,7,8],
            fr = """Chaque coupe horizontale sera parallele a son plan de reference.
Ainsi il est possible de faire des coupes par exemple :
\begin{itemize}
\item a telle distance au-dessus du fond ;
\item a telle distance sous la surface ;
\item suivant un plan intermediaire\ldots
\end{itemize}
Le plan 0 correspond au plan parfaitement horizontal a la cote 0.""",
            ang = """Each horizontal cross section will be parallel to its reference
plane. It is then possible to make cross sections which are:
\begin{itemize}
\item at a chosen distance above the bottom,
\item at a chosen distance below the surface,
\item referenced to an inbetween plane\ldots
\end{itemize}
Plane 0 corresponds to the plane perfecly horizontal to the height 0.""",
        ),
#       -----------------------------------
        ELEVATION_FROM_REFERENCE_LEVEL = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            defaut = [0.,0.,0.,0.,0.,0.,0.,0.,0.],
            fr = """Decalage entre la coupe et son plan de reference, ceci pour
chaque coupe horizontale.""",
            ang = """Gap between the cross sections and its reference plane, this
must be defined for cross section.""",
        ),
    ),
)
# -----------------------------------------------------------------------
VERTICAL_CROSS_SECTION = PROC(nom= "VERTICAL_CROSS_SECTION",op = None,
# -----------------------------------------------------------------------
#   -----------------------------------
    NUMBER_OF_VERTICAL_CROSS_SECTIONS = SIMP(statut ='o',
#   -----------------------------------
        typ = 'I',
        defaut = 0,
        fr = """Permet de definir simultanement plusieurs coupes verticales.
La valeur maximale autorisee est 9.""",
        ang = """Allow multiple vertical sections. The maximum value is 9.""",
    ),
#   -----------------------------------
    b_NUMBER_OF_VERTICAL_CROSS_SECTIONSG = BLOC(condition="NUMBER_OF_VERTICAL_CROSS_SECTIONS > 0",
#   -----------------------------------
#       -----------------------------------
        VERTICAL_CROSS_SECTION_FILE_FORMAT = SIMP(statut ='o',
#       -----------------------------------
            typ = 'TXM',
            into = ['SERAFIN','SERAFIND','MED'],
            defaut = 'SERAFIN',
            fr = """Format du fichier de resultats.
Les valeurs possibles sont :
\begin{itemize}
\item SERAFIN : format standard simple precision pour \tel ;
\item SERAFIND: format standard double precision pour \tel ;
\item MED     : format MED base sur HDF5.
\end{itemize}""",
            ang = """Results file format. Possible values are:
\begin{itemize}
\item SERAFIN : classical single precision format in \tel,
\item SERAFIND: classical double precision format in \tel,
\item MED     : MED format based on HDF5.
\end{itemize}""",
        ),
#       -----------------------------------
        VERTICAL_CROSS_SECTION_FILE = SIMP(statut ='o',
#       -----------------------------------
            typ = ('Fichier','All Files (*)','Sauvegarde'),
            defaut = '',
            fr = """Nom generique des fichiers des coupes verticales.
Le fichier contenant la coupe $i$ au $j$e pas de temps enregistre aura
pour nom ce nom generique suivi de l extension .i.j.""",
            ang = """Generic name for the vertical cross sections file.  The file
containing the cross section $i$ for the $j$ time step name will be the
generic followed by the extension .i.j.""",
        ),
#       -----------------------------------
        NUMBER_OF_NODES_FOR_VERTICAL_CROSS_SECTION_DISCRETIZATION = SIMP(statut ='o',
#       -----------------------------------
            typ = 'I',
            defaut = 120,
            fr = """Il s''agit du nombre de points suivant l''horizontale.""",
            ang = """It is the number of points along the horizontal.""",
        ),
#       -----------------------------------
        DISTORSION_BETWEEN_VERTICAL_AND_HORIZONTAL = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            defaut = [1.,1.,1.,1.,1.,1.,1.,1.,1.],
            fr = """Rapport entre echelles verticale et horizontale pour chaque
coupe verticale.""",
            ang = """Ratio between vertical and horizontal scales for each vertical
cross section.""",
        ),
#       -----------------------------------
        ABSCISSAE_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_1 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
#       -----------------------------------
        ORDINATES_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_1 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
    ),
#   -----------------------------------
    b_NUMBER_OF_VERTICAL_CROSS_SECTIONSH = BLOC(condition="NUMBER_OF_VERTICAL_CROSS_SECTIONS > 1",
#   -----------------------------------
#       -----------------------------------
        ABSCISSAE_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_2 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
#       -----------------------------------
        ORDINATES_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_2 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
    ),
#   -----------------------------------
    b_NUMBER_OF_VERTICAL_CROSS_SECTIONSI = BLOC(condition="NUMBER_OF_VERTICAL_CROSS_SECTIONS > 2",
#   -----------------------------------
#       -----------------------------------
        ABSCISSAE_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_3 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
#       -----------------------------------
        ORDINATES_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_3 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
    ),
#   -----------------------------------
    b_NUMBER_OF_VERTICAL_CROSS_SECTIONSJ = BLOC(condition="NUMBER_OF_VERTICAL_CROSS_SECTIONS > 3",
#   -----------------------------------
#       -----------------------------------
        ABSCISSAE_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_4 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
#       -----------------------------------
        ORDINATES_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_4 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
    ),
#   -----------------------------------
    b_NUMBER_OF_VERTICAL_CROSS_SECTIONSK = BLOC(condition="NUMBER_OF_VERTICAL_CROSS_SECTIONS > 4",
#   -----------------------------------
#       -----------------------------------
        ABSCISSAE_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_5 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
#       -----------------------------------
        ORDINATES_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_5 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
    ),
#   -----------------------------------
    b_NUMBER_OF_VERTICAL_CROSS_SECTIONSL = BLOC(condition="NUMBER_OF_VERTICAL_CROSS_SECTIONS > 5",
#   -----------------------------------
#       -----------------------------------
        ABSCISSAE_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_6 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
#       -----------------------------------
        ORDINATES_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_6 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
    ),
#   -----------------------------------
    b_NUMBER_OF_VERTICAL_CROSS_SECTIONSM = BLOC(condition="NUMBER_OF_VERTICAL_CROSS_SECTIONS > 6",
#   -----------------------------------
#       -----------------------------------
        ABSCISSAE_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_7 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
#       -----------------------------------
        ORDINATES_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_7 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
    ),
#   -----------------------------------
    b_NUMBER_OF_VERTICAL_CROSS_SECTIONSN = BLOC(condition="NUMBER_OF_VERTICAL_CROSS_SECTIONS > 7",
#   -----------------------------------
#       -----------------------------------
        ABSCISSAE_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_8 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
#       -----------------------------------
        ORDINATES_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_8 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
    ),
#   -----------------------------------
    b_NUMBER_OF_VERTICAL_CROSS_SECTIONSO = BLOC(condition="NUMBER_OF_VERTICAL_CROSS_SECTIONS > 8",
#   -----------------------------------
#       -----------------------------------
        ABSCISSAE_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_9 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
#       -----------------------------------
        ORDINATES_OF_THE_VERTICES_OF_VERTICAL_CROSS_SECTION_9 = SIMP(statut ='o',
#       -----------------------------------
            typ = 'R', min=0, max='**',
            fr = """Tout est dans le titre.""",
            ang = """It is all said in the title.""",
        ),
    ),
)
# -----------------------------------------------------------------------
INTERNAL = PROC(nom= "INTERNAL",op = None,
# -----------------------------------------------------------------------
    UIinfo = {"groupes": ("CACHE")},
#   -----------------------------------
    STEERING_FILE = SIMP(statut ='o',
#   -----------------------------------
        typ = ('Fichier','All Files (*)'),
        defaut = '',
        fr = """Nom du fichier contenant les references des fichiers et
les options du calcul a realiser.""",
        ang = """Name of the file containing the parameters of the computation.
Written by the user.""",
    ),
#   -----------------------------------
    DICTIONARY = SIMP(statut ='o',
#   -----------------------------------
        typ = ('Fichier','All Files (*)'),
        defaut = 'postel3d.dico',
        fr = """Dictionnaire des mots cles.""",
        ang = """Key word dictionary.""",
    ),
)
TEXTE_NEW_JDC = "\
COMPUTATION_ENVIRONMENT();\
GENERAL();\
HORIZONTAL_CROSS_SECTION();\
VERTICAL_CROSS_SECTION();\
"
Ordre_Des_Commandes = (
'COMPUTATION_ENVIRONMENT',
'GENERAL',
'HORIZONTAL_CROSS_SECTION',
'VERTICAL_CROSS_SECTION',
'INTERNAL')
try:
    import TelApy
    source = "eficas"
except Exception as excpt:
    source = "Telemac"
enum = source+'.postel3d_enum_auto'
dicoCasEn = source+'.postel3d_dicoCasEnToCata'
dicoCasFr = source+'.postel3d_dicoCasFrToCata'
