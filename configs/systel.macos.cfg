# _____                              _______________________________
# ____/ TELEMAC Project Definitions /______________________________/
#
# based on systel.cis-ubuntu.cfg from v7p2r0
[Configurations]
configs:   gfort gfort-mpich
# _____          ____________________________________
# ____/ General /___________________________________/
# Global declaration that are true for each configuration
[general]
language:   2
modules:     system
#
cmd_lib:    ar cru <libname> <objs>
#
mods_all:   -I <config>
#
sfx_zip:    .zip
sfx_lib:    .so
sfx_obj:    .o
sfx_mod:    .mod
sfx_exe:
#
val_root:   <root>/examples
val_rank:   all
cmd_obj_c: gcc -c <srcName> -o <objName>
#
# _____                           ____________________________________
# ____/ Mac OS X gfortran scalar /___________________________________/
[gfort]
#
cmd_obj:    gfortran -cpp -c -O3 -fconvert=big-endian -frecord-marker=4 <mods> <incs> <f95name>
cmd_exe:    gfortran -fconvert=big-endian -frecord-marker=4 -v -o <exename> <objs> <libs>

#
# _____                          ____________________________________
# ____/ Mac OS X gfortran mpich /___________________________________/
[gfort-mpich]
#
brief: parallel mode, using mpiexec directly (of the MPICH2 package).
       The only difference with the scalar versions (debugged) is the presence
       of the key mpi_cmdexec and the -DHAVE_MPI compilation directive.
       Of course, you also need the key par_cmdexec.
       Finally, note that this configuration also works whether
       processor is 0 or 1.
#
par_cmdexec:   <config>/partel < <partel.par> >> <partel.log>
mpi_cmdexec:  mpiexec -wdir <wdir> -n <ncsize> <exename>
#
cmd_obj:    gfortran -cpp -c -O3 -fbounds-check -fbacktrace -finit-real=nan -DHAVE_MPI -fconvert=big-endian -frecord-marker=4 <mods> <incs> <f95name>
cmd_exe:    mpifort -fconvert=big-endian -frecord-marker=4 -lpthread -v -lm -o <exename> <objs> <libs>
#
#these lines may have to begin with incs_all and libs_all instead of incs and libs, but I'm not 100% sure
incs: -I $MPIHOME/include -I $METISHOME/include
libs: $METISHOME/lib/libmetis.dylib -L $MPIHOME/lib
#
