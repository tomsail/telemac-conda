%!PS-Adobe-2.0
%%Title: Figure1.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Tue Oct 08 17:43:08 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Figure1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (i21149)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Oct 08 17:43:08 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
816 480 M
63 0 V
6049 0 R
-63 0 V
stroke
720 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 250)]
] -53.3 MRshow
1.000 UL
LTb
816 917 M
63 0 V
6049 0 R
-63 0 V
stroke
720 917 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 300)]
] -53.3 MRshow
1.000 UL
LTb
816 1354 M
63 0 V
6049 0 R
-63 0 V
stroke
720 1354 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 350)]
] -53.3 MRshow
1.000 UL
LTb
816 1790 M
63 0 V
6049 0 R
-63 0 V
stroke
720 1790 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 400)]
] -53.3 MRshow
1.000 UL
LTb
816 2227 M
63 0 V
6049 0 R
-63 0 V
stroke
720 2227 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 450)]
] -53.3 MRshow
1.000 UL
LTb
816 2664 M
63 0 V
6049 0 R
-63 0 V
stroke
720 2664 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 500)]
] -53.3 MRshow
1.000 UL
LTb
816 3101 M
63 0 V
6049 0 R
-63 0 V
stroke
720 3101 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 550)]
] -53.3 MRshow
1.000 UL
LTb
816 3538 M
63 0 V
6049 0 R
-63 0 V
stroke
720 3538 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 600)]
] -53.3 MRshow
1.000 UL
LTb
816 3974 M
63 0 V
6049 0 R
-63 0 V
stroke
720 3974 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 650)]
] -53.3 MRshow
1.000 UL
LTb
816 4411 M
63 0 V
6049 0 R
-63 0 V
stroke
720 4411 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 700)]
] -53.3 MRshow
1.000 UL
LTb
816 4848 M
63 0 V
6049 0 R
-63 0 V
stroke
720 4848 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 750)]
] -53.3 MRshow
1.000 UL
LTb
816 480 M
0 63 V
0 4305 R
0 -63 V
stroke
816 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
1495 480 M
0 63 V
0 4305 R
0 -63 V
stroke
1495 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 5000)]
] -53.3 MCshow
1.000 UL
LTb
2174 480 M
0 63 V
0 4305 R
0 -63 V
stroke
2174 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 10000)]
] -53.3 MCshow
1.000 UL
LTb
2853 480 M
0 63 V
0 4305 R
0 -63 V
stroke
2853 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 15000)]
] -53.3 MCshow
1.000 UL
LTb
3532 480 M
0 63 V
0 4305 R
0 -63 V
stroke
3532 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 20000)]
] -53.3 MCshow
1.000 UL
LTb
4212 480 M
0 63 V
0 4305 R
0 -63 V
stroke
4212 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 25000)]
] -53.3 MCshow
1.000 UL
LTb
4891 480 M
0 63 V
0 4305 R
0 -63 V
stroke
4891 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 30000)]
] -53.3 MCshow
1.000 UL
LTb
5570 480 M
0 63 V
0 4305 R
0 -63 V
stroke
5570 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 35000)]
] -53.3 MCshow
1.000 UL
LTb
6249 480 M
0 63 V
0 4305 R
0 -63 V
stroke
6249 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 40000)]
] -53.3 MCshow
1.000 UL
LTb
6928 480 M
0 63 V
0 4305 R
0 -63 V
stroke
6928 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 45000)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
816 4848 N
816 480 L
6112 0 V
0 4368 V
-6112 0 V
Z stroke
LCb setrgbcolor
160 2664 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 160.0 0.0 true true 0 (Debit \(m)]
[(Helvetica) 128.0 80.0 true true 0 (3)]
[(Helvetica) 160.0 0.0 true true 0 (/s\))]
] -69.3 MCshow
grestore
LTb
LCb setrgbcolor
3872 80 M
[ [(Helvetica) 160.0 0.0 true true 0 (Temps \(s\))]
] -53.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
6193 4705 M
[ [(Helvetica) 160.0 0.0 true true 0 (V7.0 \(x = 5 km\))]
] -53.3 MRshow
LT0
6289 4705 M
447 0 V
816 917 M
41 -15 V
40 -4 V
41 -1 V
41 6 V
41 15 V
40 27 V
41 34 V
41 37 V
41 41 V
40 45 V
41 48 V
41 51 V
41 53 V
40 55 V
41 57 V
41 59 V
41 60 V
40 60 V
41 62 V
41 64 V
41 64 V
40 67 V
41 68 V
41 69 V
41 71 V
40 72 V
41 73 V
41 74 V
41 75 V
40 76 V
41 77 V
41 78 V
41 78 V
40 80 V
41 81 V
41 82 V
41 83 V
40 84 V
41 85 V
41 86 V
41 87 V
40 87 V
41 88 V
41 90 V
41 90 V
40 91 V
41 93 V
41 93 V
41 94 V
40 94 V
41 94 V
41 90 V
41 81 V
40 70 V
41 58 V
41 49 V
41 42 V
40 32 V
41 25 V
41 18 V
41 11 V
40 5 V
41 -2 V
41 -6 V
41 -11 V
40 -16 V
41 -21 V
41 -25 V
41 -28 V
40 -32 V
41 -36 V
41 -39 V
41 -42 V
40 -45 V
41 -48 V
41 -50 V
40 -53 V
41 -56 V
41 -57 V
41 -60 V
40 -62 V
41 -63 V
41 -66 V
41 -67 V
40 -69 V
41 -71 V
41 -72 V
41 -74 V
40 -75 V
41 -77 V
41 -78 V
41 -80 V
40 -81 V
41 -82 V
41 -84 V
41 -85 V
40 -85 V
41 -87 V
41 -87 V
41 -85 V
40 -77 V
41 -67 V
5013 2318 L
41 -54 V
40 -51 V
41 -47 V
41 -44 V
41 -41 V
40 -39 V
41 -36 V
41 -35 V
41 -32 V
40 -31 V
41 -29 V
41 -28 V
41 -27 V
40 -25 V
41 -24 V
41 -23 V
41 -22 V
40 -21 V
41 -20 V
41 -19 V
41 -18 V
40 -18 V
41 -17 V
41 -16 V
41 -16 V
40 -15 V
41 -15 V
41 -14 V
41 -13 V
40 -13 V
41 -13 V
41 -12 V
41 -12 V
40 -11 V
41 -11 V
41 -11 V
41 -11 V
40 -10 V
41 -10 V
41 -9 V
41 -9 V
stroke
LT1
LTb
6193 4545 M
[ [(Helvetica) 160.0 0.0 true true 0 (V7.0 \(x = 10 km\))]
] -53.3 MRshow
LT1
6289 4545 M
447 0 V
816 917 M
41 -15 V
40 -5 V
41 -1 V
41 -1 V
41 0 V
40 0 V
41 0 V
41 2 V
41 3 V
40 5 V
41 7 V
41 10 V
41 12 V
40 14 V
41 16 V
41 18 V
41 19 V
40 21 V
41 23 V
41 25 V
41 26 V
40 28 V
41 28 V
41 31 V
41 31 V
40 33 V
41 33 V
41 35 V
41 36 V
40 36 V
41 38 V
41 38 V
41 39 V
40 40 V
41 41 V
41 42 V
41 43 V
40 44 V
41 46 V
41 46 V
41 48 V
40 48 V
41 50 V
41 50 V
41 51 V
40 52 V
41 53 V
41 54 V
41 55 V
40 55 V
41 57 V
41 57 V
41 58 V
40 58 V
41 60 V
41 61 V
41 60 V
40 59 V
41 59 V
41 57 V
41 55 V
40 54 V
41 51 V
41 48 V
41 47 V
40 43 V
41 42 V
41 38 V
41 36 V
40 33 V
41 30 V
41 28 V
41 25 V
40 22 V
41 19 V
41 17 V
40 14 V
41 11 V
41 9 V
41 6 V
40 4 V
41 1 V
41 -1 V
41 -4 V
40 -6 V
41 -8 V
41 -11 V
41 -13 V
40 -15 V
41 -17 V
41 -19 V
41 -22 V
40 -23 V
41 -25 V
41 -28 V
41 -29 V
40 -31 V
41 -33 V
41 -34 V
41 -37 V
40 -38 V
41 -39 V
5013 3065 L
41 -43 V
40 -42 V
41 -43 V
41 -42 V
41 -41 V
40 -40 V
41 -40 V
41 -39 V
41 -37 V
40 -37 V
41 -36 V
41 -36 V
41 -34 V
40 -33 V
41 -33 V
41 -32 V
41 -30 V
40 -30 V
41 -29 V
41 -28 V
41 -28 V
40 -26 V
41 -26 V
41 -26 V
41 -24 V
40 -24 V
41 -23 V
41 -23 V
41 -22 V
40 -21 V
41 -21 V
41 -20 V
41 -20 V
40 -19 V
41 -18 V
41 -19 V
41 -17 V
40 -18 V
41 -17 V
41 -16 V
41 -16 V
stroke
LT2
LTb
6193 4385 M
[ [(Helvetica) 160.0 0.0 true true 0 (V7.0 \(x = 15 km\))]
] -53.3 MRshow
LT2
6289 4385 M
447 0 V
816 917 M
41 -15 V
40 -5 V
41 -1 V
41 -1 V
41 0 V
40 0 V
41 0 V
41 0 V
41 0 V
40 0 V
41 0 V
41 0 V
41 1 V
40 1 V
41 2 V
41 2 V
41 3 V
40 4 V
41 5 V
41 5 V
41 7 V
40 7 V
41 9 V
41 9 V
41 10 V
40 11 V
41 12 V
41 13 V
41 14 V
40 15 V
41 15 V
41 17 V
41 17 V
40 18 V
41 19 V
41 20 V
41 20 V
40 21 V
41 22 V
41 22 V
41 24 V
40 24 V
41 24 V
41 25 V
41 26 V
40 27 V
41 27 V
41 27 V
41 28 V
40 29 V
41 29 V
41 31 V
41 31 V
40 32 V
41 32 V
41 34 V
41 34 V
40 35 V
41 35 V
41 37 V
41 37 V
40 37 V
41 38 V
41 38 V
41 38 V
40 38 V
41 39 V
41 37 V
41 38 V
40 37 V
41 37 V
41 36 V
41 35 V
40 35 V
41 34 V
41 34 V
40 32 V
41 32 V
41 30 V
41 30 V
40 29 V
41 27 V
41 27 V
41 25 V
40 24 V
41 22 V
41 22 V
41 20 V
40 18 V
41 18 V
41 15 V
41 15 V
40 13 V
41 11 V
41 10 V
41 9 V
40 8 V
41 5 V
41 5 V
41 3 V
40 1 V
41 0 V
5013 2845 L
41 -3 V
40 -4 V
41 -6 V
41 -7 V
41 -8 V
40 -10 V
41 -11 V
41 -12 V
41 -13 V
40 -14 V
41 -14 V
41 -15 V
41 -16 V
40 -16 V
41 -16 V
41 -17 V
41 -18 V
40 -17 V
41 -18 V
41 -17 V
41 -18 V
40 -18 V
41 -18 V
41 -18 V
41 -18 V
40 -18 V
41 -18 V
41 -18 V
41 -18 V
40 -17 V
41 -18 V
41 -17 V
41 -17 V
40 -17 V
41 -17 V
41 -16 V
41 -17 V
40 -16 V
41 -16 V
41 -16 V
41 -16 V
1.000 UP
stroke
LT3
LTb
6193 4225 M
[ [(Helvetica) 160.0 0.0 true true 0 (V5.0 \(x = 15 km\))]
] -53.3 MRshow
LT3
816 917 Pls
857 902 Pls
897 897 Pls
938 896 Pls
979 895 Pls
1020 895 Pls
1060 895 Pls
1101 895 Pls
1142 895 Pls
1183 895 Pls
1223 895 Pls
1264 895 Pls
1305 895 Pls
1346 896 Pls
1386 897 Pls
1427 899 Pls
1468 901 Pls
1509 904 Pls
1549 908 Pls
1590 913 Pls
1631 918 Pls
1672 925 Pls
1712 932 Pls
1753 941 Pls
1794 950 Pls
1835 960 Pls
1875 971 Pls
1916 983 Pls
1957 996 Pls
1998 1010 Pls
2038 1025 Pls
2079 1040 Pls
2120 1057 Pls
2161 1074 Pls
2201 1092 Pls
2242 1111 Pls
2283 1131 Pls
2324 1151 Pls
2364 1172 Pls
2405 1194 Pls
2446 1216 Pls
2487 1240 Pls
2527 1264 Pls
2568 1288 Pls
2609 1313 Pls
2650 1339 Pls
2690 1366 Pls
2731 1393 Pls
2772 1420 Pls
2813 1448 Pls
2853 1477 Pls
2894 1506 Pls
2935 1537 Pls
2976 1568 Pls
3016 1600 Pls
3057 1632 Pls
3098 1666 Pls
3139 1700 Pls
3179 1735 Pls
3220 1770 Pls
3261 1807 Pls
3302 1844 Pls
3342 1881 Pls
3383 1919 Pls
3424 1957 Pls
3465 1995 Pls
3505 2033 Pls
3546 2072 Pls
3587 2109 Pls
3628 2147 Pls
3668 2184 Pls
3709 2221 Pls
3750 2257 Pls
3791 2292 Pls
3831 2327 Pls
3872 2361 Pls
3913 2395 Pls
3953 2427 Pls
3994 2459 Pls
4035 2489 Pls
4076 2519 Pls
4116 2548 Pls
4157 2575 Pls
4198 2602 Pls
4239 2627 Pls
4279 2651 Pls
4320 2673 Pls
4361 2695 Pls
4402 2715 Pls
4442 2733 Pls
4483 2751 Pls
4524 2766 Pls
4565 2781 Pls
4605 2794 Pls
4646 2805 Pls
4687 2815 Pls
4728 2824 Pls
4768 2832 Pls
4809 2837 Pls
4850 2842 Pls
4891 2845 Pls
4931 2846 Pls
4972 2846 Pls
5013 2845 Pls
5054 2842 Pls
5094 2838 Pls
5135 2832 Pls
5176 2825 Pls
5217 2817 Pls
5257 2807 Pls
5298 2796 Pls
5339 2784 Pls
5380 2771 Pls
5420 2757 Pls
5461 2743 Pls
5502 2728 Pls
5543 2712 Pls
5583 2696 Pls
5624 2680 Pls
5665 2663 Pls
5706 2645 Pls
5746 2628 Pls
5787 2610 Pls
5828 2593 Pls
5869 2575 Pls
5909 2557 Pls
5950 2539 Pls
5991 2521 Pls
6032 2503 Pls
6072 2485 Pls
6113 2467 Pls
6154 2449 Pls
6195 2431 Pls
6235 2414 Pls
6276 2396 Pls
6317 2379 Pls
6358 2362 Pls
6398 2345 Pls
6439 2328 Pls
6480 2312 Pls
6521 2295 Pls
6561 2279 Pls
6602 2263 Pls
6643 2247 Pls
6684 2231 Pls
6512 4225 Pls
1.000 UL
LTb
816 4848 N
816 480 L
6112 0 V
0 4368 V
-6112 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
